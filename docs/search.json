[
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Mutsa's Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Mutsa's Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Mutsa's Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\n\nWarning: package 'readxl' was built under R version 4.2.3\n\nlibrary(dplyr) #for data processing/cleaning\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.2.3\n\nlibrary(here) #to set paths\n\nWarning: package 'here' was built under R version 4.2.3\n\n\nhere() starts at C:/Users/malik/Documents/1. UGA Classes/15. Malika Spring 2024/MADASpring_24/mutsanyamuranga-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nWarning: package 'here' was built under R version 4.2.3\n\n\nhere() starts at C:/Users/malik/Documents/1. UGA Classes/15. Malika Spring 2024/MADASpring_24/mutsanyamuranga-MADA-portfolio\n\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.2.3\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 Hair Color            0             1   1   2     0        5          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n3 Age                   0             1  33.7 15.4  18  23  32  39   69 ▇▃▃▁▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Mutsa's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Mutsa's Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hey There!",
    "section": "",
    "text": "Welcome to my website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Loading\nTo start, I loaded the dslabs package as part of the assignment and renv package to organize the additional packages and track their usage. The help() function allowed me to look at the gapminder data set. The str() and summary() functions allowed me to get an overview of the data structure and a summary of the data.\n\nlibrary(dslabs)\nlibrary(renv)\n\n\nAttaching package: 'renv'\n\n\nThe following objects are masked from 'package:stats':\n\n    embed, update\n\n\nThe following objects are masked from 'package:utils':\n\n    history, upgrade\n\n\nThe following objects are masked from 'package:base':\n\n    autoload, load, remove\n\nhelp(gapminder)\n\n\n#get an overview of data structure\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n#get a summary of data\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n\n\n#determine the type of object gapminder is\nclass(gapminder)\n\n[1] \"data.frame\"\n\n\n\n\nProcessing\nEssentially, I filtered the dslabs data to process and look at subsets of the data. When looking at the continent of Africa, I created the africadata variable to concentrate the data to that continent.\n\n# Filter only African countries\nafricadata &lt;- subset(gapminder, continent == \"Africa\")\n#get an overview of data structure\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n#get a summary of data\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n\nI looked at three variables - life expectancy, infant mortality and population size - and processed that data by plotting the latter to variables through the two objects, infantLife and popLife.\n\n# Create a new object with infant_mortality and life_expectancy\ninfantLife &lt;- africadata[, c(\"infant_mortality\", \"life_expectancy\")]\n# Create a new object with population and life_expectancy\npopLife &lt;- africadata[, c(\"population\", \"life_expectancy\")]\n\n\n#get an overview of data structure for the two new objects\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n#get a summary of data for infantLife and popLife\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n\n\n# Plot life expectancy as a function of infant mortality\nplot(infantLife$infant_mortality, infantLife$life_expectancy,\n     main = \"Life Expectancy vs Infant Mortality\",\n     xlab = \"Infant Mortality\",\n     ylab = \"Life Expectancy\",\n     pch = 16)  # Set the point type to a solid circle\n# Add grid lines\ngrid()\n\n\n\n# Plot life expectancy as a function of population size (log scale)\nplot(log10(popLife$population), popLife$life_expectancy,\n     main = \"Life Expectancy vs Population Size (log scale)\",\n     xlab = \"Log Population\",\n     ylab = \"Life Expectancy\",\n     pch = 16)  # Set the point type to a solid circle\n# Add grid lines\ngrid()\n\n\n\n\nThe different streaks within the plots are due to a change in the years for which the data as collected for each country. This creates a trend the across the plot indicating a relationship in the data points for the specific streaks.\n\n# Find years with missing data for infant mortality\nyears_with_na &lt;- unique(africadata[is.na(africadata$infant_mortality), \"year\"])\n\n# Identify years to exclude (up to 1981 and for 2016)\nyears_to_exclude &lt;- c(1970:1981, 2016)\n\n# Choose the year 2000 and exclude other years\nselected_year &lt;- 2000\nfiltered_africadata &lt;- africadata[africadata$year == selected_year & !(africadata$year %in% years_to_exclude), ]\n\n# Check the dimensions of the filtered data\ndim(filtered_africadata)\n\n[1] 51  9\n\n\nI focused on the year 2000 to remove this effect for processing and then plotted the data. Finally, I looked at the simple regression model to assess the relationship of the variables within the two objects.\n\n\nPlotting\n\n# Plot life expectancy as a function of infant mortality for the year 2000\nplot(filtered_africadata$infant_mortality, filtered_africadata$life_expectancy,\n     main = \"Life Expectancy vs Infant Mortality (Year 2000)\",\n     xlab = \"Infant Mortality\",\n     ylab = \"Life Expectancy\",\n     pch = 16)  # Set the point type to a solid circle\n# Add grid lines\ngrid()\n\n\n\n# Plot life expectancy as a function of population size (log scale) for the year 2000\nplot(log10(filtered_africadata$population), filtered_africadata$life_expectancy,\n     main = \"Life Expectancy vs Population Size (Year 2000, log scale)\",\n     xlab = \"Log Population\",\n     ylab = \"Life Expectancy\",\n     pch = 16)  # Set the point type to a solid circle\n# Add grid lines\ngrid()\n\n\n\n\n\n\nModeling\n\n# Fit linear regression with life expectancy as the outcome and infant mortality as the predictor\nfit1 &lt;- lm(life_expectancy ~ infant_mortality, data = filtered_africadata)\n# Fit linear regression with life expectancy as the outcome and population size (log scale) as the predictor\nfit2 &lt;- lm(life_expectancy ~ log10(population), data = filtered_africadata)\n# Print summary for fit1\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = filtered_africadata)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\n# Print summary for fit2\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ log10(population), data = filtered_africadata)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-19.113  -4.809  -1.554   3.907  18.863 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)         65.324     12.520   5.217 3.65e-06 ***\nlog10(population)   -1.315      1.829  -0.719    0.476    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.502 on 49 degrees of freedom\nMultiple R-squared:  0.01044,   Adjusted R-squared:  -0.009755 \nF-statistic: 0.517 on 1 and 49 DF,  p-value: 0.4755\n\n\n\n\nConclusion\nFor fit1(infantLife in 2000), the pvalue is low indicating that the weak negative correlation is significant and we can reject the null hypothesis that the correllation is equal to 0. #For fit2(popLife in 2000), the pvalue is greater than .05 indicating that we cannot reject the null hypothesis that there is no linear relationship between logPopulation and life expectancy.\nThis section is contributed by Malika Dhakhwa\nThis part of the exercise examines gun murders in the United States in 2010, using the ‘murders’ dataset found in R’s ‘dslabs’ package. The analysis leverages the comprehensive capabilities of the ‘tidyverse’ package for data manipulation, visualization and analysis.\nR’s help function provides insightful guidance on various datasets, including ‘murders’. For instance, executing ‘help(murders)’ in R prompts to detailed information about this dataset.\n\n#load dslabs package\nlibrary(\"dslabs\")\n#look at help file for NYC Regents exams scores 2010 data\nhelp(murders)\n#load tidyverse package\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n✖ purrr::modify() masks renv::modify()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nAs exhibited in the help window, the ‘murders’ dataset contains columns of the US state and their abbreviation, Geographical US region, State population of 2010 and Number of gun murders by states in 2010. A detailed breakdown of the Variable Names and Variable are listed below.\nVariable Name Variable state US state abb Abbreviation of US state region Geographical US region population State population (2010) total Number of gun murders in state (2010)\nThe str function pulls the structure of the actual data. As we can see below, the ‘murders’ data has 51 observations and 5 variables. There are two numerical variables, state population in 2010 and number of gun murders in the state in 2010; two character variables state and abb and one factor variable, region.\n\n#get an overview of data structure\nstr(murders)\n\n'data.frame':   51 obs. of  5 variables:\n $ state     : chr  \"Alabama\" \"Alaska\" \"Arizona\" \"Arkansas\" ...\n $ abb       : chr  \"AL\" \"AK\" \"AZ\" \"AR\" ...\n $ region    : Factor w/ 4 levels \"Northeast\",\"South\",..: 2 4 4 2 4 4 1 2 2 2 ...\n $ population: num  4779736 710231 6392017 2915918 37253956 ...\n $ total     : num  135 19 232 93 1257 ...\n\n\nThe summary(murders) provides statistical overview. For numerical columns, it presents minimum, maximum, mean, median, quartiles and missing values. For categorical or factor columns, it provides a count of the number of occurrences for each level. For example, there are 9 observations for Northeast region, 17 for the South, 12 for the North Central and 13 for the West region. No missing values are observed.\n\n#get a summary of data\nsummary(murders)\n\n    state               abb                      region     population      \n Length:51          Length:51          Northeast    : 9   Min.   :  563626  \n Class :character   Class :character   South        :17   1st Qu.: 1696962  \n Mode  :character   Mode  :character   North Central:12   Median : 4339367  \n                                       West         :13   Mean   : 6075769  \n                                                          3rd Qu.: 6636084  \n                                                          Max.   :37253956  \n     total       \n Min.   :   2.0  \n 1st Qu.:  24.5  \n Median :  97.0  \n Mean   : 184.4  \n 3rd Qu.: 268.0  \n Max.   :1257.0  \n\n\nIt is important to find out the class or type of an object in R before applying any functions and operations. Determining the object’s class with ‘class(murders)’ confirms that ‘murders’ is a ‘data.frame’, indicative of its tabular structure in R.\n\n#determine the type of object murders is\nclass(murders)\n\n[1] \"data.frame\"\n\n\nTo visualize the data distribution, a few plots are created. Population have larger values, some in millions. For the purpose of better model fitting, the population is converted into ‘thousands’ number by dividing it by 1000n\n\n#population in thousands\nmurders &lt;- murders %&gt;%\n  mutate(pop_thousands= population / 1000)\n\nA scatter plot of total murder by states is plotted against state population which revealed a positive correlation between the number of gun murders and population in the states in 2010.\n\n#Plotting number of gun murders in state as a function of state population\np1 &lt;- murders %&gt;% ggplot(aes(x=pop_thousands, y=total)) + geom_point() + geom_smooth(method='lm')+\n        ggtitle(\"Figure 1: Gun Murders in the States by Population\")+\n          theme(plot.title = element_text(hjust = 0.5)) +  \n            xlab(\"Population in 'Thousands'\") +\n              ylab(\"Total Gun Murders\")\nplot(p1)\n\n\n\n\nSecond, box plot is created to compare the distribution of total gun murders by state across four different geographical regions.It suggests that the South region has the highest median indicating more states in this region had higher murder rates in 2010 compared to other regions. It is followed by Northeast, North Central, and the West regions. The North Central region has larger inter-quartile range, suggesting a larger variation in the number of gun murders by state in 2010 compared to other regions The outliers on the plots of South and West regions indicate that few states in these two regions had exceptionally higher murder counts in 2010.\n\n#Plotting number of gun murders in US Geographical regions\np2 &lt;- murders %&gt;% ggplot(aes(x=region, y=total)) + geom_boxplot()+\n       ggtitle(\"Figure 2: Gun Murders by Geographical Regions\")+\n          theme(plot.title = element_text(hjust = 0.5)) +  \n            xlab(\"Regions\") +\n              ylab(\"Total Gun Murders\")\nplot(p2)\n\n\n\n\nNext, box plot is created to compare the distribution of state populations across the four geographical regions.It revealed the North Central region has the highest median indicating more states in this region had larger population in 2010 compared to other regions. It is followed by South, North East, and the West. The Northeast region has larger inter-quartile ranges, indicating a larger variation in population by state in 2010 compared to other regions. The box plots also suggest that one state in the West and two in the South are exceptionally highly populated.\n\n#Plotting number of gun murders in Geographical US region\np3 &lt;- murders %&gt;% ggplot(aes(x=region, y= pop_thousands)) + geom_boxplot()+\n        ggtitle(\"Figure 3: Population by Geographical Regions\")+\n          theme(plot.title = element_text(hjust = 0.5)) +  \n            xlab(\"Regions\") +\n              ylab(\"Population in 'Thousands'\") \nplot(p3)\n\n\n\n\nWhile the scatter plot suggested a positive correlation between state population and the number of gun murders, the box plots do not provide clear evidence to support this trend.\nFurther examination is performed fitting a linear model with number of gun murders in 2010 as outcome and Geographical US region (a factor) and State population measured in thousands as predictors.\nBased on the extremely small p-value, population is a significant predictor of gun murders in the US states in 2010. On average, for each addition of one thousand in the population, the number of gun murders increased by 0.03. The South region is also significant at 5% level. Its coefficient suggests that, holding population constant, the South region, on an average, had 61.913 more gun murders than the Northeast region in 2010.\n\nfit1 &lt;- lm(total ~ population + region, murders)  \n\n\n#Printing the results of the linear model fit1\nsummary(fit1)\n\n\nCall:\nlm(formula = total ~ population + region, data = murders)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-93.124 -42.386  -1.239  24.105 178.883 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)         -3.881e+01  2.114e+01  -1.836   0.0728 .  \npopulation           3.287e-05  1.225e-06  26.823   &lt;2e-16 ***\nregionSouth          6.191e+01  2.444e+01   2.534   0.0148 *  \nregionNorth Central  7.818e+00  2.614e+01   0.299   0.7662    \nregionWest           3.897e+00  2.570e+01   0.152   0.8801    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 59.25 on 46 degrees of freedom\nMultiple R-squared:  0.9421,    Adjusted R-squared:  0.937 \nF-statistic:   187 on 4 and 46 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About Mutsa",
    "section": "",
    "text": "Hello, My name is Mutsa Nyamuranga. I am excited to see where this new year takes me. Essentially, my family is from Zimbabwe, but I was born here in Georgia. I went to the University of Georgia for my undergraduate degree in Biology to pursue a career in medicine. I decided to complete a Master of Public Health degree with a concentration in Epidemiology along the way."
  },
  {
    "objectID": "aboutme.html#background",
    "href": "aboutme.html#background",
    "title": "About Mutsa",
    "section": "",
    "text": "Hello, My name is Mutsa Nyamuranga. I am excited to see where this new year takes me. Essentially, my family is from Zimbabwe, but I was born here in Georgia. I went to the University of Georgia for my undergraduate degree in Biology to pursue a career in medicine. I decided to complete a Master of Public Health degree with a concentration in Epidemiology along the way."
  },
  {
    "objectID": "aboutme.html#interests",
    "href": "aboutme.html#interests",
    "title": "About Mutsa",
    "section": "Interests",
    "text": "Interests\nDisease distribution and methods to mitigate infectious disease outbreaks are of interest. I would like to generate skills in biostatistics and data analysis so I felt that taking MADA would be prudent."
  },
  {
    "objectID": "aboutme.html#experience",
    "href": "aboutme.html#experience",
    "title": "About Mutsa",
    "section": "Experience",
    "text": "Experience\nI do not have a comprehensive background in coding, but I have used R, SAS, and STATA programs for other course projects. However, I have taken Biostat 1 and 2."
  },
  {
    "objectID": "aboutme.html#quirk",
    "href": "aboutme.html#quirk",
    "title": "About Mutsa",
    "section": "Quirk",
    "text": "Quirk\nNot so sure I have a quirky fact and thing apart from being an intense Manchester United soccer fan.\n\n\n\nMutsa Nyamuranga"
  },
  {
    "objectID": "aboutme.html#interesting-website",
    "href": "aboutme.html#interesting-website",
    "title": "About Mutsa",
    "section": "Interesting Website",
    "text": "Interesting Website\nhttps://www.kdnuggets.com/\nI found this website earlier and I thought was interesting because it provides the latest news and opinions on coding and AI. One article posted Jan. 9, 2024 describes how a lack of data governance can lead to fatigue in the use of AI because of excessive expectations."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "This is my presentation exercise where I will be recreating a graph from FiveThirtyEight. The article’s title is “Blatter’s Reign At FIFA Hasn’t Helped Soccer’s Poor” by Nate Silver. I downloaded the data from their database and asked ChatGPT to create code based on these instructions:"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Data Analysis Project",
    "section": "",
    "text": "Malika Dhakhwa contributed to this exercise"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Data Analysis Project",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nThe analysis was conducted for educational purposes. A theorized, messy data set is provided, and my partner and I collaborated to process, clean, and analyze the data set using R and Rstudio."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Data Analysis Project",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nThe data provided was in a .xlsx file, which held the demographic information on 14 different individual. The demographic information included: height, weight, gender, age, and hair color."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Data Analysis Project",
    "section": "2.3 Questions/Hypotheses to be addressed",
    "text": "2.3 Questions/Hypotheses to be addressed\nWas the data able to be analyzed after the process of cleaning? What can be determined when the linear model was applied to this dataset?"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nThe data was initially provided by Andreas Handel for the Spring 2024 MADA course. The data is then manipulated by Mutsa Nyamuranga in part 1."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Data Analysis Project",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\n\n3.2.1 Setup\nLoad needed packages. make sure they are installed.\nlibrary(readxl) #for loading Excel files library(dplyr) #for data processing/cleaning library(tidyr) #for data processing/cleaning library(skimr) #for nice visualization of data library(here) #to set paths\n\n\n3.2.2 Data loading\n“# path to data”# note the use of the here() package and not absolute paths data_location &lt;- here::here(“starter-analysis-exercise”,“data”,“raw-data”,“exampledata2.xlsx”) rawdata &lt;- readxl::read_excel(data_location)\n\n\n3.2.3 Check data\nFirst we can look at the codebook\ncodebook &lt;- readxl::read_excel(data_location, sheet =“Codebook”) print(codebook)\n\n\n3.2.4 Cleaning\nChange data to numeric values\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != “sixty” ) %&gt;% dplyr::mutate(Height = as.numeric(Height)) skimr::skim(d1) hist(d1$Height)\nSince we unfortunately don’t know, we might need to remove this person with height of 6, which we’ll do here\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==“6”,round(6*30.48,0)) ) skimr::skim(d2)\nTo be able to analyze the data, we’ll remove those individuals with weight of 7000\nd3 &lt;- d2 %&gt;% dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na() skimr::skim(d3)\nNow checking the Gender variable.\nd3\\(Gender &lt;- as.factor(d3\\)Gender)\nskimr::skim(d3)\nRemoving that individual with that NA entry\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(“NA”,“N”)) ) %&gt;% droplevels() skimr::skim(d4)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Data Analysis Project",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nBelow are the results of the data analysis of our data set.\nTable 1 shows a summary of the data.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\ncharacter.min\ncharacter.max\ncharacter.empty\ncharacter.n_unique\ncharacter.whitespace\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\ncharacter\nHair Color\n0\n1\n1\n2\n0\n5\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nfactor\nGender\n0\n1\nNA\nNA\nNA\nNA\nNA\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nnumeric\nAge\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n33.66667\n15.42725\n18\n23\n32\n39\n69\n▇▃▃▁▂\n\n\n\n\n\n\nFigure 1 shows a boxplot figure produced by one of the R scripts.\n\n\n\n\n\nFigure 1: Height stratified by Hair Color.\n\n\n\n\nFigure 2 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\nFigure 2: Weight distribution by Age.\n\n\n\n\nExample Table 2 shows a summary of a linear model fit\n\n\n\n\nTable 2: Linear model fit table.\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n102.065611\n20.8877422\n4.8863879\n0.0163914\n\n\nHair ColorBo\n-13.805430\n10.6802921\n-1.2926079\n0.2867000\n\n\nHair ColorBr\n-3.475113\n11.2987748\n-0.3075655\n0.7785289\n\n\nHair ColorR\n35.576923\n11.7752051\n3.0213421\n0.0566987\n\n\nHair ColorW\n-90.748869\n30.5334161\n-2.9721165\n0.0589680\n\n\nAge\n2.067873\n0.6876215\n3.0072841\n0.0573354\n\n\n\n\n\n\nHere is the code used to render this linear model analysis\n#load needed packages. make sure they are installed. library(ggplot2) #for plotting library(broom) #for cleaning up output from lm() library(here) #for data loading/saving\n#path to data\n#note the use of the here() package and not absolute paths’\ndata_location &lt;- here::here(“starter-analysis-exercise”,“data”,“processed-data”,“processeddata2.rds”)\n#load data.\nmydata &lt;- readRDS(data_location)\n# fit linear model using height as outcome, Hair Color and Age as predictor\nlmfit3 &lt;- lm(Height ~ Hair Color + Age, mydata)\n# place results from fit into a data frame with the tidy function\nlmtable3 &lt;- broom::tidy(lmfit3)\n#look at fit results’ print(lmtable3)\n# save fit results table\ntable_file3 = here(“starter-analysis-exercise”,“results”, “tables-files”, “resulttable3.rds”) saveRDS(lmtable3, file = table_file3)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Data Analysis Project",
    "section": "4.2 Full analysis",
    "text": "4.2 Full analysis\nIt looks as though there is no apparent association between Age and weight. In Figure 2, there appears to be no pattern in the distribution of data points as weight increases. The individuals that showed the greatest variation in height in accordance to Figure 1 were those with brown hair. In the other levels, there is little variation in height.\nIn Table 2, the intercept provided an extremely high p=value, thus showing that the age and hair color variables affecting the height can not be proven or concluded."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Data Analysis Project",
    "section": "4.3 Conclusions",
    "text": "4.3 Conclusions\nThe project was a great way to improve in data analysis methods by establishing familiarity with software such as Github, R and Rstudio to clean analyze, and produce figures/tables for data."
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Mutsa's Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Mutsa's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Mutsa's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Mutsa's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Mutsa's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\n\nWarning: package 'readxl' was built under R version 4.2.3\n\nlibrary(dplyr) #for data processing/cleaning\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.2.3\n\nlibrary(here) #to set paths\n\nWarning: package 'here' was built under R version 4.2.3\n\n\nhere() starts at C:/Users/malik/Documents/1. UGA Classes/15. Malika Spring 2024/MADASpring_24/mutsanyamuranga-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                         `Allowed Values`\n  &lt;chr&gt;           &lt;chr&gt;                                         &lt;chr&gt;           \n1 Height          height in centimeters                         numeric value &gt;…\n2 Weight          weight in kilograms                           numeric value &gt;…\n3 Gender          identified gender (male/female/other)         M/F/O/NA        \n4 Age             identfied in years                            numeric value &gt;…\n5 Hair Color      identified color (red/black/blonde/brown/gre… R/Ba/Bo/Br/G/W  \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height       &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"…\n$ Weight       &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender       &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"…\n$ Age          &lt;dbl&gt; 41, 22, 27, 39, 48, 18, 23, 32, 54, 65, 29, 25, 34, 69\n$ `Hair Color` &lt;chr&gt; \"Bo\", \"R\", \"Ba\", \"Br\", \"G\", \"R\", \"Ba\", \"Br\", \"Bo\", \"W\", \"…\n\nsummary(rawdata)\n\n    Height              Weight          Gender               Age       \n Length:14          Min.   :  45.0   Length:14          Min.   :18.00  \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.:25.50  \n Mode  :character   Median :  70.0   Mode  :character   Median :33.00  \n                    Mean   : 602.7                      Mean   :37.57  \n                    3rd Qu.:  90.0                      3rd Qu.:46.25  \n                    Max.   :7000.0                      Max.   :69.00  \n                    NA's   :1                                          \n  Hair Color       \n Length:14         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender   Age `Hair Color`\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;       \n1 180        80 M         41 Bo          \n2 175        70 O         22 R           \n3 sixty      60 F         27 Ba          \n4 178        76 F         39 Br          \n5 192        90 NA        48 G           \n6 6          55 F         18 R           \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHair Color\n0\n1\n1\n2\n0\n6\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55.0\n70\n90.00\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n37.57\n16.07\n18\n25.5\n33\n46.25\n69\n▇▅▅▂▃\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHair Color\n0\n1\n1\n2\n0\n6\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n38.38\n16.42\n18\n25.00\n34\n48\n69\n▇▆▆▂▃\n\n\n\n\nhist(d1$Height)\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHair Color\n0\n1\n1\n2\n0\n6\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n38.38\n16.42\n18\n25.00\n34\n48\n69\n▇▆▆▂▃\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHair Color\n0\n1\n1\n2\n0\n6\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nAge\n0\n1\n36.82\n15.54\n18\n24.0\n34\n44.5\n69\n▇▃▆▂▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHair Color\n0\n1\n1\n2\n0\n6\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nAge\n0\n1\n36.82\n15.54\n18\n24.0\n34\n44.5\n69\n▇▃▆▂▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHair Color\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nAge\n0\n1\n33.67\n15.43\n18\n23\n32\n39\n69\n▇▃▃▁▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nWarning: package 'here' was built under R version 4.2.3\n\n\nhere() starts at C:/Users/malik/Documents/1. UGA Classes/15. Malika Spring 2024/MADASpring_24/mutsanyamuranga-MADA-portfolio\n\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.2.3\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 Hair Color            0             1   1   2     0        5          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n3 Age                   0             1  33.7 15.4  18  23  32  39   69 ▇▃▃▁▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\nThe categorical category of “Hair color” on the X-Axis with “Height” on the Y-Axis in box-plot format.\n\np5 &lt;- mydata %&gt;% ggplot(aes(x=`Hair Color`, y=Height)) + geom_boxplot()\nplot(p5)\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"categorical-hair_color-height.png\")\nggsave(filename = figure_file, plot=p5) \n\nSaving 7 x 5 in image\n\n\nThe categorical category of “Weight” on the X-Axis with “Age” on the Y-Axis in scatter plot.\n\np6 &lt;- mydata %&gt;% ggplot(aes(x=`Weight`, y=Age)) + geom_point()\nplot(p6)\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"numerical-weight-age.png\")\nggsave(filename = figure_file, plot=p6) \n\nSaving 7 x 5 in image\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#loading",
    "href": "coding-exercise/coding-exercise.html#loading",
    "title": "R Coding Exercise",
    "section": "",
    "text": "To start, I loaded the dslabs package as part of the assignment and renv package to organize the additional packages and track their usage. The help() function allowed me to look at the gapminder data set. The str() and summary() functions allowed me to get an overview of the data structure and a summary of the data.\n\nlibrary(dslabs)\nlibrary(renv)\n\n\nAttaching package: 'renv'\n\n\nThe following objects are masked from 'package:stats':\n\n    embed, update\n\n\nThe following objects are masked from 'package:utils':\n\n    history, upgrade\n\n\nThe following objects are masked from 'package:base':\n\n    autoload, load, remove\n\nhelp(gapminder)\n\n\n#get an overview of data structure\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n#get a summary of data\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n\n\n#determine the type of object gapminder is\nclass(gapminder)\n\n[1] \"data.frame\""
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#processing",
    "href": "coding-exercise/coding-exercise.html#processing",
    "title": "R Coding Exercise",
    "section": "Processing",
    "text": "Processing\nEssentially, I filtered the dslabs data to process and look at subsets of the data. When looking at the continent of Africa, I created the africadata variable to concentrate the data to that continent.\n\n# Filter only African countries\nafricadata &lt;- subset(gapminder, continent == \"Africa\")\n#get an overview of data structure\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n#get a summary of data\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n\nI looked at three variables - life expectancy, infant mortality and population size - and processed that data by plotting the latter to variables through the two objects, infantLife and popLife.\n\n# Create a new object with infant_mortality and life_expectancy\ninfantLife &lt;- africadata[, c(\"infant_mortality\", \"life_expectancy\")]\n# Create a new object with population and life_expectancy\npopLife &lt;- africadata[, c(\"population\", \"life_expectancy\")]\n\n\n#get an overview of data structure for the two new objects\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n#get a summary of data for infantLife and popLife\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n\n\n# Plot life expectancy as a function of infant mortality\nplot(infantLife$infant_mortality, infantLife$life_expectancy,\n     main = \"Life Expectancy vs Infant Mortality\",\n     xlab = \"Infant Mortality\",\n     ylab = \"Life Expectancy\",\n     pch = 16)  # Set the point type to a solid circle\n# Add grid lines\ngrid()\n\n\n\n# Plot life expectancy as a function of population size (log scale)\nplot(log10(popLife$population), popLife$life_expectancy,\n     main = \"Life Expectancy vs Population Size (log scale)\",\n     xlab = \"Log Population\",\n     ylab = \"Life Expectancy\",\n     pch = 16)  # Set the point type to a solid circle\n# Add grid lines\ngrid()\n\n\n\n\nThe different streaks within the plots are due to a change in the years for which the data as collected for each country. This creates a trend the across the plot indicating a relationship in the data points for the specific streaks.\n\n# Find years with missing data for infant mortality\nyears_with_na &lt;- unique(africadata[is.na(africadata$infant_mortality), \"year\"])\n\n# Identify years to exclude (up to 1981 and for 2016)\nyears_to_exclude &lt;- c(1970:1981, 2016)\n\n# Choose the year 2000 and exclude other years\nselected_year &lt;- 2000\nfiltered_africadata &lt;- africadata[africadata$year == selected_year & !(africadata$year %in% years_to_exclude), ]\n\n# Check the dimensions of the filtered data\ndim(filtered_africadata)\n\n[1] 51  9\n\n\nI focused on the year 2000 to remove this effect for processing and then plotted the data. Finally, I looked at the simple regression model to assess the relationship of the variables within the two objects."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#plotting",
    "href": "coding-exercise/coding-exercise.html#plotting",
    "title": "R Coding Exercise",
    "section": "Plotting",
    "text": "Plotting\n\n# Plot life expectancy as a function of infant mortality for the year 2000\nplot(filtered_africadata$infant_mortality, filtered_africadata$life_expectancy,\n     main = \"Life Expectancy vs Infant Mortality (Year 2000)\",\n     xlab = \"Infant Mortality\",\n     ylab = \"Life Expectancy\",\n     pch = 16)  # Set the point type to a solid circle\n# Add grid lines\ngrid()\n\n\n\n# Plot life expectancy as a function of population size (log scale) for the year 2000\nplot(log10(filtered_africadata$population), filtered_africadata$life_expectancy,\n     main = \"Life Expectancy vs Population Size (Year 2000, log scale)\",\n     xlab = \"Log Population\",\n     ylab = \"Life Expectancy\",\n     pch = 16)  # Set the point type to a solid circle\n# Add grid lines\ngrid()"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#modeling",
    "href": "coding-exercise/coding-exercise.html#modeling",
    "title": "R Coding Exercise",
    "section": "Modeling",
    "text": "Modeling\n\n# Fit linear regression with life expectancy as the outcome and infant mortality as the predictor\nfit1 &lt;- lm(life_expectancy ~ infant_mortality, data = filtered_africadata)\n# Fit linear regression with life expectancy as the outcome and population size (log scale) as the predictor\nfit2 &lt;- lm(life_expectancy ~ log10(population), data = filtered_africadata)\n# Print summary for fit1\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = filtered_africadata)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\n# Print summary for fit2\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ log10(population), data = filtered_africadata)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-19.113  -4.809  -1.554   3.907  18.863 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)         65.324     12.520   5.217 3.65e-06 ***\nlog10(population)   -1.315      1.829  -0.719    0.476    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.502 on 49 degrees of freedom\nMultiple R-squared:  0.01044,   Adjusted R-squared:  -0.009755 \nF-statistic: 0.517 on 1 and 49 DF,  p-value: 0.4755"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#conclusion",
    "href": "coding-exercise/coding-exercise.html#conclusion",
    "title": "R Coding Exercise",
    "section": "Conclusion",
    "text": "Conclusion\nFor fit1(infantLife in 2000), the pvalue is low indicating that the weak negative correlation is significant and we can reject the null hypothesis that the correllation is equal to 0. #For fit2(popLife in 2000), the pvalue is greater than .05 indicating that we cannot reject the null hypothesis that there is no linear relationship between logPopulation and life expectancy.\nThis section is contributed by Malika Dhakhwa\nThis part of the exercise examines gun murders in the United States in 2010, using the ‘murders’ dataset found in R’s ‘dslabs’ package. The analysis leverages the comprehensive capabilities of the ‘tidyverse’ package for data manipulation, visualization and analysis.\nR’s help function provides insightful guidance on various datasets, including ‘murders’. For instance, executing ‘help(murders)’ in R prompts to detailed information about this dataset.\n\n#load dslabs package\nlibrary(\"dslabs\")\n#look at help file for NYC Regents exams scores 2010 data\nhelp(murders)\n#load tidyverse package\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n✖ purrr::modify() masks renv::modify()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nAs exhibited in the help window, the ‘murders’ dataset contains columns of the US state and their abbreviation, Geographical US region, State population of 2010 and Number of gun murders by states in 2010. A detailed breakdown of the Variable Names and Variable are listed below.\nVariable Name Variable state US state abb Abbreviation of US state region Geographical US region population State population (2010) total Number of gun murders in state (2010)\nThe str function pulls the structure of the actual data. As we can see below, the ‘murders’ data has 51 observations and 5 variables. There are two numerical variables, state population in 2010 and number of gun murders in the state in 2010; two character variables state and abb and one factor variable, region.\n\n#get an overview of data structure\nstr(murders)\n\n'data.frame':   51 obs. of  5 variables:\n $ state     : chr  \"Alabama\" \"Alaska\" \"Arizona\" \"Arkansas\" ...\n $ abb       : chr  \"AL\" \"AK\" \"AZ\" \"AR\" ...\n $ region    : Factor w/ 4 levels \"Northeast\",\"South\",..: 2 4 4 2 4 4 1 2 2 2 ...\n $ population: num  4779736 710231 6392017 2915918 37253956 ...\n $ total     : num  135 19 232 93 1257 ...\n\n\nThe summary(murders) provides statistical overview. For numerical columns, it presents minimum, maximum, mean, median, quartiles and missing values. For categorical or factor columns, it provides a count of the number of occurrences for each level. For example, there are 9 observations for Northeast region, 17 for the South, 12 for the North Central and 13 for the West region. No missing values are observed.\n\n#get a summary of data\nsummary(murders)\n\n    state               abb                      region     population      \n Length:51          Length:51          Northeast    : 9   Min.   :  563626  \n Class :character   Class :character   South        :17   1st Qu.: 1696962  \n Mode  :character   Mode  :character   North Central:12   Median : 4339367  \n                                       West         :13   Mean   : 6075769  \n                                                          3rd Qu.: 6636084  \n                                                          Max.   :37253956  \n     total       \n Min.   :   2.0  \n 1st Qu.:  24.5  \n Median :  97.0  \n Mean   : 184.4  \n 3rd Qu.: 268.0  \n Max.   :1257.0  \n\n\nIt is important to find out the class or type of an object in R before applying any functions and operations. Determining the object’s class with ‘class(murders)’ confirms that ‘murders’ is a ‘data.frame’, indicative of its tabular structure in R.\n\n#determine the type of object murders is\nclass(murders)\n\n[1] \"data.frame\"\n\n\nTo visualize the data distribution, a few plots are created. Population have larger values, some in millions. For the purpose of better model fitting, the population is converted into ‘thousands’ number by dividing it by 1000n\n\n#population in thousands\nmurders &lt;- murders %&gt;%\n  mutate(pop_thousands= population / 1000)\n\nA scatter plot of total murder by states is plotted against state population which revealed a positive correlation between the number of gun murders and population in the states in 2010.\n\n#Plotting number of gun murders in state as a function of state population\np1 &lt;- murders %&gt;% ggplot(aes(x=pop_thousands, y=total)) + geom_point() + geom_smooth(method='lm')+\n        ggtitle(\"Figure 1: Gun Murders in the States by Population\")+\n          theme(plot.title = element_text(hjust = 0.5)) +  \n            xlab(\"Population in 'Thousands'\") +\n              ylab(\"Total Gun Murders\")\nplot(p1)\n\n\n\n\nSecond, box plot is created to compare the distribution of total gun murders by state across four different geographical regions.It suggests that the South region has the highest median indicating more states in this region had higher murder rates in 2010 compared to other regions. It is followed by Northeast, North Central, and the West regions. The North Central region has larger inter-quartile range, suggesting a larger variation in the number of gun murders by state in 2010 compared to other regions The outliers on the plots of South and West regions indicate that few states in these two regions had exceptionally higher murder counts in 2010.\n\n#Plotting number of gun murders in US Geographical regions\np2 &lt;- murders %&gt;% ggplot(aes(x=region, y=total)) + geom_boxplot()+\n       ggtitle(\"Figure 2: Gun Murders by Geographical Regions\")+\n          theme(plot.title = element_text(hjust = 0.5)) +  \n            xlab(\"Regions\") +\n              ylab(\"Total Gun Murders\")\nplot(p2)\n\n\n\n\nNext, box plot is created to compare the distribution of state populations across the four geographical regions.It revealed the North Central region has the highest median indicating more states in this region had larger population in 2010 compared to other regions. It is followed by South, North East, and the West. The Northeast region has larger inter-quartile ranges, indicating a larger variation in population by state in 2010 compared to other regions. The box plots also suggest that one state in the West and two in the South are exceptionally highly populated.\n\n#Plotting number of gun murders in Geographical US region\np3 &lt;- murders %&gt;% ggplot(aes(x=region, y= pop_thousands)) + geom_boxplot()+\n        ggtitle(\"Figure 3: Population by Geographical Regions\")+\n          theme(plot.title = element_text(hjust = 0.5)) +  \n            xlab(\"Regions\") +\n              ylab(\"Population in 'Thousands'\") \nplot(p3)\n\n\n\n\nWhile the scatter plot suggested a positive correlation between state population and the number of gun murders, the box plots do not provide clear evidence to support this trend.\nFurther examination is performed fitting a linear model with number of gun murders in 2010 as outcome and Geographical US region (a factor) and State population measured in thousands as predictors.\nBased on the extremely small p-value, population is a significant predictor of gun murders in the US states in 2010. On average, for each addition of one thousand in the population, the number of gun murders increased by 0.03. The South region is also significant at 5% level. Its coefficient suggests that, holding population constant, the South region, on an average, had 61.913 more gun murders than the Northeast region in 2010.\n\nfit1 &lt;- lm(total ~ population + region, murders)  \n\n\n#Printing the results of the linear model fit1\nsummary(fit1)\n\n\nCall:\nlm(formula = total ~ population + region, data = murders)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-93.124 -42.386  -1.239  24.105 178.883 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)         -3.881e+01  2.114e+01  -1.836   0.0728 .  \npopulation           3.287e-05  1.225e-06  26.823   &lt;2e-16 ***\nregionSouth          6.191e+01  2.444e+01   2.534   0.0148 *  \nregionNorth Central  7.818e+00  2.614e+01   0.299   0.7662    \nregionWest           3.897e+00  2.570e+01   0.152   0.8801    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 59.25 on 46 degrees of freedom\nMultiple R-squared:  0.9421,    Adjusted R-squared:  0.937 \nF-statistic:   187 on 4 and 46 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "SyntheticDataExercise/SyntheticDATAExercise.html",
    "href": "SyntheticDataExercise/SyntheticDATAExercise.html",
    "title": "Synthetic Data Exercise",
    "section": "",
    "text": "For this exercise, I will be conducting an analysis of synthetic data that I have created by referencing existing data. I have a great interest in studying lifestyle factors that contribute to heart disease, so I have based this exercise on:\nShufelt, C. L., et al. (2020). \"Biometric and Psychometric Remote Monitoring and Cardiovascular Risk Biomarkers in Ischemic Heart Disease.\" Journal of the American Heart Association 9(18): e016023.\nI utilized AI to create the coding for this project while also making additional edits to suit my needs."
  },
  {
    "objectID": "SyntheticDataExercise/SyntheticDATAExercise.html#linear-regression-model-for-cholesterol-level-vs-dose",
    "href": "SyntheticDataExercise/SyntheticDATAExercise.html#linear-regression-model-for-cholesterol-level-vs-dose",
    "title": "Synthetic Data Exercise",
    "section": "Linear Regression Model for Cholesterol Level vs Dose:",
    "text": "Linear Regression Model for Cholesterol Level vs Dose:\nThe intercept is 165.39, and the coefficient for the Dose variable is -0.1374. This suggests that for every unit increase in Dose, the Cholesterol Level decreases by 0.1374 units. Both the intercept and Dose coefficient are highly significant (p &lt; 2e-16), indicating a strong relationship between Dose and Cholesterol Level."
  },
  {
    "objectID": "SyntheticDataExercise/SyntheticDATAExercise.html#linear-regression-model-for-crp-level-vs-dose",
    "href": "SyntheticDataExercise/SyntheticDATAExercise.html#linear-regression-model-for-crp-level-vs-dose",
    "title": "Synthetic Data Exercise",
    "section": "Linear Regression Model for CRP Level vs Dose:",
    "text": "Linear Regression Model for CRP Level vs Dose:\nThe intercept is 1.2971, and the coefficient for the Dose variable is 1.0630. This suggests that for every unit increase in Dose, the CRP Level increases by 1.0630 units. Both the intercept and Dose coefficient are highly significant (p &lt; 2e-16), indicating a strong relationship between Dose and CRP Level."
  },
  {
    "objectID": "SyntheticDataExercise/SyntheticDATAExercise.html#logistic-regression-model-for-heart-attack-vs-dose",
    "href": "SyntheticDataExercise/SyntheticDATAExercise.html#logistic-regression-model-for-heart-attack-vs-dose",
    "title": "Synthetic Data Exercise",
    "section": "Logistic Regression Model for Heart Attack vs Dose:",
    "text": "Logistic Regression Model for Heart Attack vs Dose:\nThe Dose coefficient is not statistically significant (p = 0.245), indicating that there is no significant relationship between Dose and the likelihood of a heart attack."
  },
  {
    "objectID": "SyntheticDataExercise/SyntheticDATAExercise.html#multiple-logistic-regression-model-for-heart-attack-with-multiple-predictors",
    "href": "SyntheticDataExercise/SyntheticDATAExercise.html#multiple-logistic-regression-model-for-heart-attack-with-multiple-predictors",
    "title": "Synthetic Data Exercise",
    "section": "Multiple Logistic Regression Model for Heart Attack with Multiple Predictors:",
    "text": "Multiple Logistic Regression Model for Heart Attack with Multiple Predictors:\nAmong the predictors, Drug_Concentration has a significant negative effect on the log-odds of a heart attack (Estimate: -0.100; p &lt; 2e-16), suggesting that higher drug concentrations are associated with a lower risk of a heart attack. Other predictors (Dose, Age, Treatment_Group, Cholesterol_Level, CRP_Level) do not have significant effects on the log-odds."
  },
  {
    "objectID": "syntheticdata-exercise/syntheticdata-exercise.html",
    "href": "syntheticdata-exercise/syntheticdata-exercise.html",
    "title": "Synthetic Data Exercise",
    "section": "",
    "text": "For this exercise, I will be conducting an analysis of synthetic data that I have created by referencing existing data. I have a great interest in studying lifestyle factors that contribute to heart disease, so I have based this exercise on:\nShufelt, C. L., et al. (2020). \"Biometric and Psychometric Remote Monitoring and Cardiovascular Risk Biomarkers in Ischemic Heart Disease.\" Journal of the American Heart Association 9(18): e016023.\nI utilized AI to create the coding for this project while also making additional edits to suit my needs."
  },
  {
    "objectID": "syntheticdata-exercise/syntheticdata-exercise.html#linear-regression-model-for-cholesterol-level-vs-dose",
    "href": "syntheticdata-exercise/syntheticdata-exercise.html#linear-regression-model-for-cholesterol-level-vs-dose",
    "title": "Synthetic Data Exercise",
    "section": "Linear Regression Model for Cholesterol Level vs Dose:",
    "text": "Linear Regression Model for Cholesterol Level vs Dose:\nThe intercept is 165.39, and the coefficient for the Dose variable is -0.1374. This suggests that for every unit increase in Dose, the Cholesterol Level decreases by 0.1374 units. Both the intercept and Dose coefficient are highly significant (p &lt; 2e-16), indicating a strong relationship between Dose and Cholesterol Level."
  },
  {
    "objectID": "syntheticdata-exercise/syntheticdata-exercise.html#linear-regression-model-for-crp-level-vs-dose",
    "href": "syntheticdata-exercise/syntheticdata-exercise.html#linear-regression-model-for-crp-level-vs-dose",
    "title": "Synthetic Data Exercise",
    "section": "Linear Regression Model for CRP Level vs Dose:",
    "text": "Linear Regression Model for CRP Level vs Dose:\nThe intercept is 1.2971, and the coefficient for the Dose variable is 1.0630. This suggests that for every unit increase in Dose, the CRP Level increases by 1.0630 units. Both the intercept and Dose coefficient are highly significant (p &lt; 2e-16), indicating a strong relationship between Dose and CRP Level."
  },
  {
    "objectID": "syntheticdata-exercise/syntheticdata-exercise.html#logistic-regression-model-for-heart-attack-vs-dose",
    "href": "syntheticdata-exercise/syntheticdata-exercise.html#logistic-regression-model-for-heart-attack-vs-dose",
    "title": "Synthetic Data Exercise",
    "section": "Logistic Regression Model for Heart Attack vs Dose:",
    "text": "Logistic Regression Model for Heart Attack vs Dose:\nThe Dose coefficient is not statistically significant (p = 0.245), indicating that there is no significant relationship between Dose and the likelihood of a heart attack."
  },
  {
    "objectID": "syntheticdata-exercise/syntheticdata-exercise.html#multiple-logistic-regression-model-for-heart-attack-with-multiple-predictors",
    "href": "syntheticdata-exercise/syntheticdata-exercise.html#multiple-logistic-regression-model-for-heart-attack-with-multiple-predictors",
    "title": "Synthetic Data Exercise",
    "section": "Multiple Logistic Regression Model for Heart Attack with Multiple Predictors:",
    "text": "Multiple Logistic Regression Model for Heart Attack with Multiple Predictors:\nAmong the predictors, Drug_Concentration has a significant negative effect on the log-odds of a heart attack (Estimate: -0.100; p &lt; 2e-16), suggesting that higher drug concentrations are associated with a lower risk of a heart attack. Other predictors (Dose, Age, Treatment_Group, Cholesterol_Level, CRP_Level) do not have significant effects on the log-odds."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html",
    "href": "cdcdata-exercise/cdcdata-exercise.html",
    "title": "Data Analysis Exercise",
    "section": "",
    "text": "When I first downloaded my data in, the size of the file was 33 MB large. R was unable to load the file so I decided to import the data. After importing the data, I wrote the code beloww to reduce the size of the to 1000 observations. I created the reduced set name (reduced_data) and cleaned the data with the following code.\n#This chunk only works in the R terminal as I cannot figure out how it will work within the qmd file.\n\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\noriginal_data &lt;- read_csv(\"Nutrition__Physical_Activity__and_Obesity_-_Behavioral_Risk_Factor_Surveillance_System_20240207.csv\")\n\nRows: 1000 Columns: 33\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (25): LocationAbbr, LocationDesc, Datasource, Class, Topic, Question, Da...\ndbl  (7): YearStart, YearEnd, Data_Value, Data_Value_Alt, Low_Confidence_Lim...\nlgl  (1): Data_Value_Unit\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Define the desired number of rows to include in the reduced dataset\ndesired_rows &lt;- 1000  # Adjust this number as needed\n\n# Select a random subset of rows\nreduced_data &lt;- original_data %&gt;% \n  sample_n(desired_rows)\n\n# Write the reduced dataset to a new CSV file\nwrite_csv(reduced_data, \"Nutrition__Physical_Activity__and_Obesity_-_Behavioral_Risk_Factor_Surveillance_System_20240207.csv\")\n\n# Retrieve the full column specification\ncolumn_spec &lt;- spec(reduced_data)\ncolumn_spec\n\ncols(\n  YearStart = col_double(),\n  YearEnd = col_double(),\n  LocationAbbr = col_character(),\n  LocationDesc = col_character(),\n  Datasource = col_character(),\n  Class = col_character(),\n  Topic = col_character(),\n  Question = col_character(),\n  Data_Value_Unit = col_logical(),\n  Data_Value_Type = col_character(),\n  Data_Value = col_double(),\n  Data_Value_Alt = col_double(),\n  Data_Value_Footnote_Symbol = col_character(),\n  Data_Value_Footnote = col_character(),\n  Low_Confidence_Limit = col_double(),\n  High_Confidence_Limit = col_double(),\n  Sample_Size = col_double(),\n  Total = col_character(),\n  `Age(years)` = col_character(),\n  Education = col_character(),\n  Gender = col_character(),\n  Income = col_character(),\n  `Race/Ethnicity` = col_character(),\n  GeoLocation = col_character(),\n  ClassID = col_character(),\n  TopicID = col_character(),\n  QuestionID = col_character(),\n  DataValueTypeID = col_character(),\n  LocationID = col_character(),\n  StratificationCategory1 = col_character(),\n  Stratification1 = col_character(),\n  StratificationCategoryId1 = col_character(),\n  StratificationID1 = col_character()\n)\n\n\nI, then, created code to clean the data removing misssing values and changing them to NA.\n\nlibrary(readr)\nlibrary(dplyr)\n\n# Display the structure of the data\nstr(reduced_data)\n\nspc_tbl_ [1,000 × 33] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ YearStart                 : num [1:1000] 2016 2021 2015 2011 2020 ...\n $ YearEnd                   : num [1:1000] 2016 2021 2015 2011 2020 ...\n $ LocationAbbr              : chr [1:1000] \"PR\" \"DC\" \"SD\" \"US\" ...\n $ LocationDesc              : chr [1:1000] \"Puerto Rico\" \"District of Columbia\" \"South Dakota\" \"National\" ...\n $ Datasource                : chr [1:1000] \"Behavioral Risk Factor Surveillance System\" \"Behavioral Risk Factor Surveillance System\" \"Behavioral Risk Factor Surveillance System\" \"Behavioral Risk Factor Surveillance System\" ...\n $ Class                     : chr [1:1000] \"Obesity / Weight Status\" \"Fruits and Vegetables\" \"Physical Activity\" \"Physical Activity\" ...\n $ Topic                     : chr [1:1000] \"Obesity / Weight Status\" \"Fruits and Vegetables - Behavior\" \"Physical Activity - Behavior\" \"Physical Activity - Behavior\" ...\n $ Question                  : chr [1:1000] \"Percent of adults aged 18 years and older who have an overweight classification\" \"Percent of adults who report consuming fruit less than one time daily\" \"Percent of adults who achieve at least 150 minutes a week of moderate-intensity aerobic physical activity or 75\"| __truncated__ \"Percent of adults who engage in muscle-strengthening activities on 2 or more days a week\" ...\n $ Data_Value_Unit           : logi [1:1000] NA NA NA NA NA NA ...\n $ Data_Value_Type           : chr [1:1000] \"Value\" \"Value\" \"Value\" \"Value\" ...\n $ Data_Value                : num [1:1000] 33.5 36.2 20.3 26.1 31.1 35.8 NA 36.7 27.7 34 ...\n $ Data_Value_Alt            : num [1:1000] 33.5 36.2 20.3 26.1 31.1 35.8 NA 36.7 27.7 34 ...\n $ Data_Value_Footnote_Symbol: chr [1:1000] NA NA NA NA ...\n $ Data_Value_Footnote       : chr [1:1000] NA NA NA NA ...\n $ Low_Confidence_Limit      : num [1:1000] 31.4 32.4 17.4 25.6 28.3 32.3 NA 33.5 25.4 29.5 ...\n $ High_Confidence_Limit     : num [1:1000] 35.6 40.1 23.7 26.7 34 39.5 NA 40.1 30.2 38.8 ...\n $ Sample_Size               : num [1:1000] 3423 1115 2059 86244 1548 ...\n $ Total                     : chr [1:1000] NA NA NA NA ...\n $ Age(years)                : chr [1:1000] NA NA NA \"45 - 54\" ...\n $ Education                 : chr [1:1000] NA NA \"Some college or technical school\" NA ...\n $ Gender                    : chr [1:1000] \"Female\" \"Male\" NA NA ...\n $ Income                    : chr [1:1000] NA NA NA NA ...\n $ Race/Ethnicity            : chr [1:1000] NA NA NA NA ...\n $ GeoLocation               : chr [1:1000] \"(18.220833, -66.590149)\" \"(38.89037138500049, -77.03196112699965)\" \"(44.353130053, -100.373530637)\" NA ...\n $ ClassID                   : chr [1:1000] \"OWS\" \"FV\" \"PA\" \"PA\" ...\n $ TopicID                   : chr [1:1000] \"OWS1\" \"FV1\" \"PA1\" \"PA1\" ...\n $ QuestionID                : chr [1:1000] \"Q037\" \"Q018\" \"Q044\" \"Q046\" ...\n $ DataValueTypeID           : chr [1:1000] \"VALUE\" \"VALUE\" \"VALUE\" \"VALUE\" ...\n $ LocationID                : chr [1:1000] \"72\" \"11\" \"46\" \"59\" ...\n $ StratificationCategory1   : chr [1:1000] \"Gender\" \"Gender\" \"Education\" \"Age (years)\" ...\n $ Stratification1           : chr [1:1000] \"Female\" \"Male\" \"Some college or technical school\" \"45 - 54\" ...\n $ StratificationCategoryId1 : chr [1:1000] \"GEN\" \"GEN\" \"EDU\" \"AGEYR\" ...\n $ StratificationID1         : chr [1:1000] \"FEMALE\" \"MALE\" \"EDUCOTEC\" \"AGEYR4554\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   YearStart = col_double(),\n  ..   YearEnd = col_double(),\n  ..   LocationAbbr = col_character(),\n  ..   LocationDesc = col_character(),\n  ..   Datasource = col_character(),\n  ..   Class = col_character(),\n  ..   Topic = col_character(),\n  ..   Question = col_character(),\n  ..   Data_Value_Unit = col_logical(),\n  ..   Data_Value_Type = col_character(),\n  ..   Data_Value = col_double(),\n  ..   Data_Value_Alt = col_double(),\n  ..   Data_Value_Footnote_Symbol = col_character(),\n  ..   Data_Value_Footnote = col_character(),\n  ..   Low_Confidence_Limit = col_double(),\n  ..   High_Confidence_Limit = col_double(),\n  ..   Sample_Size = col_double(),\n  ..   Total = col_character(),\n  ..   `Age(years)` = col_character(),\n  ..   Education = col_character(),\n  ..   Gender = col_character(),\n  ..   Income = col_character(),\n  ..   `Race/Ethnicity` = col_character(),\n  ..   GeoLocation = col_character(),\n  ..   ClassID = col_character(),\n  ..   TopicID = col_character(),\n  ..   QuestionID = col_character(),\n  ..   DataValueTypeID = col_character(),\n  ..   LocationID = col_character(),\n  ..   StratificationCategory1 = col_character(),\n  ..   Stratification1 = col_character(),\n  ..   StratificationCategoryId1 = col_character(),\n  ..   StratificationID1 = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n# Check for missing values\nmissing_values &lt;- sum(is.na(reduced_data))\ncat(\"Number of missing values in the dataset:\", missing_values, \"\\n\")\n\nNumber of missing values in the dataset: 8310 \n\n# Replace missing values (if coded as 999) with NA\nreduced_data &lt;- reduced_data %&gt;%\n  mutate_all(~ ifelse(. == 999, NA, .))\n\nIn order to view only a few variables in the data out of the 33 available, I decided that Class, Question, the data value attached to the question, education income and race/ethnicity were pertinent variables. Geographical location was kept as a separate viariable to analyze.\n\n# Select a few variables for analysis (e.g., first 5 variables)\nselected_variables &lt;- reduced_data %&gt;%\n  select(LocationDesc, Class, Question, Data_Value, Education, Income, `Race/Ethnicity`)\n\n# Display summary statistics for selected variables\nsummary(selected_variables)\n\n LocationDesc          Class             Question           Data_Value   \n Length:1000        Length:1000        Length:1000        Min.   : 4.60  \n Class :character   Class :character   Class :character   1st Qu.:24.12  \n Mode  :character   Mode  :character   Mode  :character   Median :30.80  \n                                                          Mean   :31.02  \n                                                          3rd Qu.:36.48  \n                                                          Max.   :66.40  \n                                                          NA's   :98     \n  Education            Income          Race/Ethnicity    \n Length:1000        Length:1000        Length:1000       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n\n\nTo explore the data further, I ran code to assess the distribution of categorical variables below.\n\nlibrary(dplyr)\nlibrary(ggplot2)\n# Perform exploratory analysis\n# Summary table for categorical variables with percentages\ncategorical_summary &lt;- reduced_data %&gt;%\n  summarize(\n    LocationDesc_percent = n_distinct(LocationDesc) / n() * 100,\n    Class_percent = n_distinct(Class) / n() * 100,\n    Question_percent = n_distinct(Question) / n() * 100,\n    Education_percent = n_distinct(Education) / n() * 100,\n    Income_percent = n_distinct(Income) / n() * 100,\n    Race_Ethnicity_percent = n_distinct(`Race/Ethnicity`) / n() * 100\n  )\n\n# Summary statistics for continuous variable\ncontinuous_summary &lt;- reduced_data %&gt;%\n  summarize(\n    Data_Value_mean = mean(Data_Value, na.rm = TRUE),\n    Data_Value_sd = sd(Data_Value, na.rm = TRUE)\n  )\n\n# Print summary tables\nprint(\"Summary Table for Categorical Variables:\")\n\n[1] \"Summary Table for Categorical Variables:\"\n\nprint(categorical_summary)\n\n# A tibble: 1 × 6\n  LocationDesc_percent Class_percent Question_percent Education_percent\n                 &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;             &lt;dbl&gt;\n1                  5.5           0.3              0.9               0.5\n# ℹ 2 more variables: Income_percent &lt;dbl&gt;, Race_Ethnicity_percent &lt;dbl&gt;\n\ncat(\"\\n\")\nprint(\"Summary Table for Continuous Variables:\")\n\n[1] \"Summary Table for Continuous Variables:\"\n\nprint(continuous_summary)\n\n# A tibble: 1 × 2\n  Data_Value_mean Data_Value_sd\n            &lt;dbl&gt;         &lt;dbl&gt;\n1            31.0          10.2\n\n\nHere, I created a plot to show the ditribution of data by physical activity class and filtered out the question “Percent engaging in no leisure-time physical activity” to look at the distibution of data within this class and question.\n\nlibrary(dplyr)\n\nphysical_activity_data &lt;- reduced_data %&gt;%\n  filter(Class == \"Physical Activity\")\n\nphysical_activity_no_leisure_data &lt;- reduced_data %&gt;%\n  filter(Class == \"Physical Activity\" & \n         Question == \"Percent of adults who engage in no leisure-time physical activity\")\n\nlibrary(ggplot2)\n\n# Summary table for categorical variables\ncategorical_summary &lt;- physical_activity_no_leisure_data %&gt;%\n  summarise(across(c(LocationDesc, Education, Income, `Race/Ethnicity`), ~round(mean(.)*100, 2))) %&gt;%\n  rename(LocationDesc_Percentage = LocationDesc,\n         Education_Percentage = Education,\n         Income_Percentage = Income,\n         Race_Ethnicity_Percentage = `Race/Ethnicity`)\n\nWarning: There were 4 warnings in `summarise()`.\nThe first warning was:\nℹ In argument: `across(...)`.\nCaused by warning in `mean.default()`:\n! argument is not numeric or logical: returning NA\nℹ Run `dplyr::last_dplyr_warnings()` to see the 3 remaining warnings.\n\nprint(\"Summary of Categorical Variables:\")\n\n[1] \"Summary of Categorical Variables:\"\n\nprint(categorical_summary)\n\n# A tibble: 1 × 4\n  LocationDesc_Percentage Education_Percentage Income_Percentage\n                    &lt;dbl&gt;                &lt;dbl&gt;             &lt;dbl&gt;\n1                      NA                   NA                NA\n# ℹ 1 more variable: Race_Ethnicity_Percentage &lt;dbl&gt;\n\n# Histogram and summary statistics for the continuous variable Data_Value\nggplot(physical_activity_no_leisure_data, aes(x = Data_Value)) +\n  geom_histogram(binwidth = 5, fill = \"skyblue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Distribution of Percentages of Adults\\nEngaging in No Leisure-Time Physical Activity\",\n       x = \"Percentage of Adults\",\n       y = \"Frequency\") +\n  theme_minimal()\n\nWarning: Removed 21 rows containing non-finite values (`stat_bin()`).\n\n\n\n\nmean_data_value &lt;- mean(physical_activity_no_leisure_data$Data_Value)\nsd_data_value &lt;- sd(physical_activity_no_leisure_data$Data_Value)\n\nprint(\"Summary of Continuous Variable (Data_Value):\")\n\n[1] \"Summary of Continuous Variable (Data_Value):\"\n\nprint(paste(\"Mean:\", round(mean_data_value, 2)))\n\n[1] \"Mean: NA\"\n\nprint(paste(\"Standard Deviation:\", round(sd_data_value, 2)))\n\n[1] \"Standard Deviation: NA\""
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#edit-1",
    "href": "presentation-exercise/presentation-exercise.html#edit-1",
    "title": "Presentation Exercise",
    "section": "Edit 1",
    "text": "Edit 1\n\nMy Prompt:\nUsing this data, can you create R code that makes 6 different graphs for each of confederation showing the point change in elo98 to elo15. each change is represented by an arrow where a green arrow represents a positive change and a red arrow is a negative change. Each country goes in descending alphabetical order and the average change of the confederation is represented at the bottom. the x axis starts at 500 to 2500 with gridlines every 500 elo.\n\n\nAI Response:\n\nlibrary(ggplot2)\n\n# Load the data\nelodata &lt;- read.csv(\"elo_blatter.csv\")\n\n# Calculate the point change in elo98 to elo15\nelodata$change &lt;- elodata$elo15 - elodata$elo98\n\n# Function to create a graph for each confederation\ncreate_confederation_graph &lt;- function(confederation) {\n  conf_data &lt;- subset(elodata, confederation == confederation)\n  conf_data &lt;- conf_data[order(conf_data$country, decreasing = TRUE), ]  # Sort by descending alphabetical order\n  \n  # Calculate average change for the confederation\n  avg_change &lt;- mean(conf_data$change)\n  \n  # Create the plot\n  p &lt;- ggplot(conf_data, aes(x = country, y = change)) +\n    geom_segment(aes(xend = country, yend = 0, color = ifelse(change &gt;= 0, \"Positive\", \"Negative\")),\n                 arrow = arrow(length = unit(0.25, \"cm\")), size = 1) +\n    geom_point(color = ifelse(conf_data$change &gt;= 0, \"green\", \"red\"), size = 2) +\n    geom_text(aes(label = change), vjust = -0.5) +\n    geom_hline(yintercept = avg_change, linetype = \"dashed\", color = \"blue\") +\n    labs(title = paste(\"Point Change in elo98 to elo15 -\", confederation),\n         x = \"Country\", y = \"Change in elo98 to elo15\") +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n  \n  print(p)\n}\n\n# Create graphs for each confederation\nconfederations &lt;- unique(elodata$confederation)\nfor (conf in confederations) {\n  create_confederation_graph(conf)\n}\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 4 rows containing missing values (`geom_segment()`).\n\n\nWarning: Removed 4 rows containing missing values (`geom_point()`).\n\n\nWarning: Removed 4 rows containing missing values (`geom_text()`).\n\n\nWarning: Removed 1 rows containing missing values (`geom_hline()`).\n\n\n\n\n\nWarning: Removed 4 rows containing missing values (`geom_segment()`).\n\n\nWarning: Removed 4 rows containing missing values (`geom_point()`).\n\n\nWarning: Removed 4 rows containing missing values (`geom_text()`).\n\n\nWarning: Removed 1 rows containing missing values (`geom_hline()`).\n\n\n\n\n\nWarning: Removed 4 rows containing missing values (`geom_segment()`).\n\n\nWarning: Removed 4 rows containing missing values (`geom_point()`).\n\n\nWarning: Removed 4 rows containing missing values (`geom_text()`).\n\n\nWarning: Removed 1 rows containing missing values (`geom_hline()`).\n\n\n\n\n\nWarning: Removed 4 rows containing missing values (`geom_segment()`).\n\n\nWarning: Removed 4 rows containing missing values (`geom_point()`).\n\n\nWarning: Removed 4 rows containing missing values (`geom_text()`).\n\n\nWarning: Removed 1 rows containing missing values (`geom_hline()`).\n\n\n\n\n\nWarning: Removed 4 rows containing missing values (`geom_segment()`).\n\n\nWarning: Removed 4 rows containing missing values (`geom_point()`).\n\n\nWarning: Removed 4 rows containing missing values (`geom_text()`).\n\n\nWarning: Removed 1 rows containing missing values (`geom_hline()`).\n\n\n\n\n\nWarning: Removed 4 rows containing missing values (`geom_segment()`).\n\n\nWarning: Removed 4 rows containing missing values (`geom_point()`).\n\n\nWarning: Removed 4 rows containing missing values (`geom_text()`).\n\n\nWarning: Removed 1 rows containing missing values (`geom_hline()`)."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#edit-2",
    "href": "presentation-exercise/presentation-exercise.html#edit-2",
    "title": "Presentation Exercise",
    "section": "Edit 2",
    "text": "Edit 2\n\nMy Prompt:\nFor CONMEBOL, only show results from Brazil, colombia, argentina, peru, venezuela, chile, ecuador, bolivia, paraguay and uruguay\nFor CONCACAF, only chow results from United States, Mexico, canada, guatemala, cuba, domican Rep., haiti, Honduras, el.salvador and nicaragua\nFor AFC, only chow results from China, India, Indonesia, Pakistan, Bangladesh, Japan, Philippines, Vietnam, Iran and Thailand\nFor UEFA, only chow results from Russia, Germany, Turkey, France, Italy, England, Ukraine, Spain, Poland and Romania\nFor CAF, only chow results from Nigeria, Ethiopia, Egypt, Dem.Rep.Congo, South Africa, Tanzania, Kenya, Algeria, Sudan and Morocco\nFor OFC, only chow results from Papua New Guinea, New Zealand, Fiji, Solomon Islands, New Caledonia, Vanuatu, Samoa, Tahiti, Tonga, American Samoa ChatGPT Sure, let’s modify the code to include only the specified countries for each confederation:\n\n\nAI Response\n\nlibrary(ggplot2)\n\n# Load the data\nelodata &lt;- read.csv(\"elo_blatter.csv\")\n\n# Filter data for specified countries in each confederation\nconmebol_countries &lt;- c(\"Brazil\", \"Colombia\", \"Argentina\", \"Peru\", \"Venezuela\", \"Chile\", \"Ecuador\", \"Bolivia\", \"Paraguay\", \"Uruguay\")\nconmebol_data &lt;- subset(elodata, confederation == \"CONMEBOL\" & country %in% conmebol_countries)\n\nconcacaf_countries &lt;- c(\"United States\", \"Mexico\", \"Canada\", \"Guatemala\", \"Cuba\", \"Dominican Rep.\", \"Haiti\", \"Honduras\", \"El Salvador\", \"Nicaragua\")\nconcacaf_data &lt;- subset(elodata, confederation == \"CONCACAF\" & country %in% concacaf_countries)\n\nafc_countries &lt;- c(\"China\", \"India\", \"Indonesia\", \"Pakistan\", \"Bangladesh\", \"Japan\", \"Philippines\", \"Vietnam\", \"Iran\", \"Thailand\")\nafc_data &lt;- subset(elodata, confederation == \"AFC\" & country %in% afc_countries)\n\nuefa_countries &lt;- c(\"Russia\", \"Germany\", \"Turkey\", \"France\", \"Italy\", \"England\", \"Ukraine\", \"Spain\", \"Poland\", \"Romania\")\nuefa_data &lt;- subset(elodata, confederation == \"UEFA\" & country %in% uefa_countries)\n\ncaf_countries &lt;- c(\"Nigeria\", \"Ethiopia\", \"Egypt\", \"Dem.Rep.Congo\", \"South Africa\", \"Tanzania\", \"Kenya\", \"Algeria\", \"Sudan\", \"Morocco\")\ncaf_data &lt;- subset(elodata, confederation == \"CAF\" & country %in% caf_countries)\n\nofc_countries &lt;- c(\"Papua New Guinea\", \"New Zealand\", \"Fiji\", \"Solomon Islands\", \"New Caledonia\", \"Vanuatu\", \"Samoa\", \"Tahiti\", \"Tonga\", \"American Samoa\")\nofc_data &lt;- subset(elodata, confederation == \"OFC\" & country %in% ofc_countries)\n\n# Combine filtered data\nfiltered_data &lt;- rbind(conmebol_data, concacaf_data, afc_data, uefa_data, caf_data, ofc_data)\n\n# Calculate the point change in elo98 to elo15\nfiltered_data$change &lt;- filtered_data$elo15 - filtered_data$elo98\n\n# Function to create a graph for each confederation\ncreate_confederation_graph &lt;- function(confederation, data) {\n  conf_data &lt;- data\n  \n  # Calculate average change for the confederation\n  avg_change &lt;- mean(conf_data$change)\n  \n  # Create the plot\n  p &lt;- ggplot(conf_data, aes(x = country, y = change)) +\n    geom_segment(aes(xend = country, yend = 0, color = ifelse(change &gt;= 0, \"Positive\", \"Negative\")),\n                 arrow = arrow(length = unit(0.25, \"cm\")), size = 1) +\n    geom_point(color = ifelse(conf_data$change &gt;= 0, \"green\", \"red\"), size = 2) +\n    geom_text(aes(label = change), vjust = -0.5) +\n    geom_hline(yintercept = avg_change, linetype = \"dashed\", color = \"blue\") +\n    labs(title = paste(\"Point Change in elo98 to elo15 -\", confederation),\n         x = \"Country\", y = \"Change in elo98 to elo15\") +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n  \n  print(p)\n}\n\n# Create graphs for each confederation\nconfederations &lt;- unique(filtered_data$confederation)\nfor (conf in confederations) {\n  create_confederation_graph(conf, subset(filtered_data, confederation == conf))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis code will generate graphs for each confederation using only the specified countries. Let me know if you need further assistance!\n\n\nMy Prompt:\nPut the countries on the Y axis and instead of showing change from 0, display change as lines from elo98 to elo15 with the end point being an arrow. The x axis should start at 500 and end at 2000.\n\n\nAI Response:\nSure, here’s the modified code to display the change as lines from elo98 to elo15 with the end point being an arrow, and the countries on the Y-axis:\n\nlibrary(ggplot2)\n\n# Load the data\nelodata &lt;- read.csv(\"elo_blatter.csv\")\n\n# Filter data for specified countries in each confederation\nconmebol_countries &lt;- c(\"Brazil\", \"Colombia\", \"Argentina\", \"Peru\", \"Venezuela\", \"Chile\", \"Ecuador\", \"Bolivia\", \"Paraguay\", \"Uruguay\")\nconmebol_data &lt;- subset(elodata, confederation == \"CONMEBOL\" & country %in% conmebol_countries)\n\nconcacaf_countries &lt;- c(\"United States\", \"Mexico\", \"Canada\", \"Guatemala\", \"Cuba\", \"Dominican Rep.\", \"Haiti\", \"Honduras\", \"El Salvador\", \"Nicaragua\")\nconcacaf_data &lt;- subset(elodata, confederation == \"CONCACAF\" & country %in% concacaf_countries)\n\nafc_countries &lt;- c(\"China\", \"India\", \"Indonesia\", \"Pakistan\", \"Bangladesh\", \"Japan\", \"Philippines\", \"Vietnam\", \"Iran\", \"Thailand\")\nafc_data &lt;- subset(elodata, confederation == \"AFC\" & country %in% afc_countries)\n\nuefa_countries &lt;- c(\"Russia\", \"Germany\", \"Turkey\", \"France\", \"Italy\", \"England\", \"Ukraine\", \"Spain\", \"Poland\", \"Romania\")\nuefa_data &lt;- subset(elodata, confederation == \"UEFA\" & country %in% uefa_countries)\n\ncaf_countries &lt;- c(\"Nigeria\", \"Ethiopia\", \"Egypt\", \"Dem.Rep.Congo\", \"South Africa\", \"Tanzania\", \"Kenya\", \"Algeria\", \"Sudan\", \"Morocco\")\ncaf_data &lt;- subset(elodata, confederation == \"CAF\" & country %in% caf_countries)\n\nofc_countries &lt;- c(\"Papua New Guinea\", \"New Zealand\", \"Fiji\", \"Solomon Islands\", \"New Caledonia\", \"Vanuatu\", \"Samoa\", \"Tahiti\", \"Tonga\", \"American Samoa\")\nofc_data &lt;- subset(elodata, confederation == \"OFC\" & country %in% ofc_countries)\n\n# Combine filtered data\nfiltered_data &lt;- rbind(conmebol_data, concacaf_data, afc_data, uefa_data, caf_data, ofc_data)\n\n# Calculate the point change in elo98 to elo15\nfiltered_data$change &lt;- filtered_data$elo15 - filtered_data$elo98\n\n# Function to create a graph for each confederation\ncreate_confederation_graph &lt;- function(confederation, data) {\n  conf_data &lt;- data\n  \n  # Create the plot\n  p &lt;- ggplot(conf_data, aes(x = elo98, y = country, xend = elo15, yend = country, color = ifelse(change &gt;= 0, \"Positive\", \"Negative\"))) +\n    geom_segment(arrow = arrow(length = unit(0.25, \"cm\")), size = 1) +\n    geom_point(color = ifelse(conf_data$change &gt;= 0, \"green\", \"red\"), size = 2) +\n    labs(title = paste(\"Point Change in elo98 to elo15 -\", confederation),\n         x = \"elo98\", y = \"Country\") +\n    scale_x_continuous(limits = c(500, 2000), breaks = seq(500, 2000, by = 500)) +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n  \n  print(p)\n}\n\n# Create graphs for each confederation\nconfederations &lt;- unique(filtered_data$confederation)\nfor (conf in confederations) {\n  create_confederation_graph(conf, subset(filtered_data, confederation == conf))\n}\n\nWarning: Removed 3 rows containing missing values (`geom_segment()`).\n\n\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nWarning: Removed 1 rows containing missing values (`geom_segment()`).\nRemoved 1 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#final-code-after-mostly-final-editing",
    "href": "presentation-exercise/presentation-exercise.html#final-code-after-mostly-final-editing",
    "title": "Presentation Exercise",
    "section": "Final Code After (mostly) Final Editing",
    "text": "Final Code After (mostly) Final Editing\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Load the data\nelodata &lt;- read.csv(\"elo_blatter.csv\")\n\n# Filter data for specified countries in each confederation\nconmebol_countries &lt;- c(\"Brazil\", \"Colombia\", \"Argentina\", \"Peru\", \"Venezuela\", \"Chile\", \"Ecuador\", \"Bolivia\", \"Paraguay\", \"Uruguay\")\nconmebol_data &lt;- subset(elodata, confederation == \"CONMEBOL\" & country %in% conmebol_countries)\n\nconcacaf_countries &lt;- c(\"United States\", \"Mexico\", \"Canada\", \"Guatemala\", \"Cuba\", \"Dominican Rep.\", \"Haiti\", \"Honduras\", \"El Salvador\", \"Nicaragua\")\nconcacaf_data &lt;- subset(elodata, confederation == \"CONCACAF\" & country %in% concacaf_countries)\n\nafc_countries &lt;- c(\"China\", \"India\", \"Indonesia\", \"Pakistan\", \"Bangladesh\", \"Japan\", \"Philippines\", \"Vietnam\", \"Iran\", \"Thailand\")\nafc_data &lt;- subset(elodata, confederation == \"AFC\" & country %in% afc_countries)\n\nuefa_countries &lt;- c(\"Russia\", \"Germany\", \"Turkey\", \"France\", \"Italy\", \"England\", \"Ukraine\", \"Spain\", \"Poland\", \"Romania\")\nuefa_data &lt;- subset(elodata, confederation == \"UEFA\" & country %in% uefa_countries)\n\ncaf_countries &lt;- c(\"Nigeria\", \"Ethiopia\", \"Egypt\", \"Dem.Rep.Congo\", \"South Africa\", \"Tanzania\", \"Kenya\", \"Algeria\", \"Sudan\", \"Morocco\")\ncaf_data &lt;- subset(elodata, confederation == \"CAF\" & country %in% caf_countries)\n\nofc_countries &lt;- c(\"Papua New Guinea\", \"New Zealand\", \"Fiji\", \"Solomon Islands\", \"New Caledonia\", \"Vanuatu\", \"Samoa\", \"Tahiti\", \"Tonga\", \"American Samoa\")\nofc_data &lt;- subset(elodata, confederation == \"OFC\" & country %in% ofc_countries)\n\n# Combine filtered data\nfiltered_data &lt;- rbind(conmebol_data, concacaf_data, afc_data, uefa_data, caf_data, ofc_data)\n\n# Calculate the point change in elo98 to elo15\nfiltered_data$change &lt;- filtered_data$elo15 - filtered_data$elo98\n\n# Calculate average changes for each confederation\nconf_avg_changes &lt;- filtered_data %&gt;%\n  group_by(confederation) %&gt;%\n  summarise(avg_change = mean(change, na.rm = TRUE))\n\n# Function to create a graph for each confederation\ncreate_confederation_graph &lt;- function(confederation, data) {\n  conf_data &lt;- data\n  avg_change &lt;- conf_avg_changes$avg_change[conf_avg_changes$confederation == confederation]\n  \n  # Create the plot\n  p &lt;- ggplot(conf_data, aes(x = elo98, y = country, xend = elo15, yend = country, color = ifelse(change &gt;= 0, \"Positive\", \"Negative\"))) +\n    geom_segment(arrow = arrow(type = \"closed\", length = unit(0.25, \"cm\")), size = 1) +\n    labs(title = paste(\"-\", confederation),\n         x = \"Change in Elo\", y = \"Country\") +\n    scale_color_manual(values = c(\"Positive\" = \"green\", \"Negative\" = \"red\")) +\n    scale_x_continuous(limits = c(500, 2000), breaks = seq(500, 2000, by = 500)) +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n   annotate(\"text\", x = 500, y = -Inf, vjust = 0, hjust = 0, label = paste(\"Average Change:\", ifelse(avg_change &gt; 0, \"+\", \"-\"), round(abs(avg_change), 2)), color = \"grey\")\n  \n  print(p)\n}\n\n# Create graphs for each confederation\nconfederations &lt;- unique(filtered_data$confederation)\nfor (conf in confederations) {\n  create_confederation_graph(conf, subset(filtered_data, confederation == conf))\n}\n\nWarning: Removed 3 rows containing missing values (`geom_segment()`).\n\n\n\n\n\n\n\n\n\n\n\nWarning: Removed 1 rows containing missing values (`geom_segment()`)."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#sample-graph-used",
    "href": "presentation-exercise/presentation-exercise.html#sample-graph-used",
    "title": "Presentation Exercise",
    "section": "Sample Graph Used",
    "text": "Sample Graph Used\n\nknitr::include_graphics(\"BlatterGraph.png\")\n\n\n\n\nThe graph is relatively the same bar a few differences. My main concern was that I was unable to get Brazil and Argentina to show on the graph as there were values that R would not reading and claimed was missing despite multiple checks on of the data.\nThe average changes were also incorrect. However, I believe this was due to not having the averages be filtered out as well. *Will fix later"
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#edit-1-1",
    "href": "presentation-exercise/presentation-exercise.html#edit-1-1",
    "title": "Presentation Exercise",
    "section": "Edit 1",
    "text": "Edit 1\n\nMy Prompt:\nCreate a table of this data using flextable\n\n\nAI Response\n\n#Load the flextable package\n\nlibrary(flextable)\n\n# Assuming your data frame is named elodata\n# If not, replace elodata with the name of your data frame\n# Assuming the first row of your data frame contains column names\n\n# Create a flextable object\nft &lt;- flextable(elodata)\n\n# Display the flextable\nft\n\n\ncountryelo98elo15confederationgdp06popu06gdp_sourcepopu_sourceAfghanistan9931,116AFC1,076.461425,631,282World BankWorld BankAlbania1,3821,549UEFA7,181.09422,992,547World BankWorld BankAlgeria1,4861,671CAF11,093.217534,507,214World BankWorld BankAndorra1,067952UEFA38,800.000081,877CIA (2005)World BankAngola1,4981,435CAF4,996.766517,122,409World BankWorld BankAnguilla612641CONCACAF8,800.000013,677CIA (2004)CIA (2007)Antigua and Barbuda1,1491,264CONCACAF22,039.727983,467World BankWorld BankArgentina1,8722,041CONMEBOL15,717.000038,988,923IMFWorld BankArmenia1,3941,512UEFA5,524.41543,002,911World BankWorld BankAruba1,015925CONCACAF21,800.0000100,830CIA (2004)World BankAustralia1,7871,718AFC34,325.017620,697,900World BankWorld BankAustria1,6861,694UEFA37,649.52908,268,641World BankWorld BankAzerbaijan1,2901,394UEFA9,829.63388,484,550World BankWorld BankBahamas858899CONCACAF23,445.7251335,622World BankWorld BankBahrain1,3281,467AFC39,789.7989950,951World BankWorld BankBangladesh1,006967AFC1,870.5200144,868,702World BankWorld BankBarbados1,2911,102CONCACAF14,639.4336274,923World BankWorld BankBelarus1,3511,543UEFA11,021.49349,604,000World BankWorld BankBelgium1,7841,887UEFA35,169.031410,547,958World BankWorld BankBelize9851,098CONCACAF7,672.4079278,985World BankWorld BankBenin1,2071,371CAF1,461.39688,443,671World BankWorld BankBermuda1,2801,230CONCACAF53,946.521464,523World BankWorld BankBhutan640611AFC4,374.5693665,568World BankWorld BankBolivia1,6641,604CONMEBOL4,327.85549,517,395World BankWorld BankBosnia and Herzegovina1,5561,694UEFA7,086.91193,875,157World BankWorld BankBotswana1,0271,286CAF11,259.67881,895,944World BankWorld BankBrazil2,0652,036CONMEBOL11,181.5922188,134,315World BankWorld BankBritish Virgin Islands848652CONCACAF38,500.000023,522CIA (2004)CIA (2007)Brunei775635AFC70,008.5011374,697World BankWorld BankBulgaria1,7681,589UEFA11,229.43467,699,020World BankWorld BankBurkina Faso1,3981,467CAF1,203.680813,822,257World BankWorld BankBurundi1,4401,312CAF646.41728,042,579World BankWorld BankCambodia1,012756AFC1,959.803513,555,054World BankWorld BankCameroon1,5971,609CAF2,337.817418,611,937World BankWorld BankCanada1,5031,499CONCACAF37,822.248232,570,505World BankWorld BankCape Verde1,2431,536CAF4,531.1035481,940World BankWorld BankCayman Islands1,154954CONCACAF43,800.000050,026CIA (2004)World BankCentral African Republic1,1891,268CAF683.87584,032,102World BankWorld BankChad1,2291,265CAF1,610.122810,356,822World BankWorld BankChile1,7571,912CONMEBOL15,428.759816,504,530World BankWorld BankChina1,6311,588AFC5,724.91671,311,020,000World BankWorld BankColombia1,7412,004CONMEBOL8,955.705343,841,370World BankWorld BankComoros891907CAF1,327.6717616,526World BankWorld BankCongo1,4841,440CAF4,714.78973,646,653World BankWorld BankCook Islands875819OFC9,100.000021,750CIA (2005)CIA (2007)Costa Rica1,5941,827CONCACAF10,436.29414,392,493World BankWorld BankCroatia1,8291,814UEFA17,019.72064,440,000World BankWorld BankCuba1,4141,391CONCACAF14,445.290811,301,100World BankWorld BankCuracao1,1971,065CONCACAF15,000.0000141,239CIA (2004)World BankCyprus1,4371,375UEFA26,337.08211,048,314World BankWorld BankCzechia1,8531,752UEFA24,415.883310,238,905World BankWorld BankDemocratic Republic of Congo1,5031,486CAF565.431455,590,838World BankWorld BankDenmark1,8281,738UEFA37,189.65995,437,272World BankWorld BankDjibouti891788CAF2,124.1220787,544World BankWorld BankDominica1,208958CONCACAF8,417.552070,690World BankWorld BankDominican Republic1,1301,227CONCACAF8,789.92679,479,269World BankWorld BankEast Timor738AFC1,107.1177999,053World BankWorld BankEastern Samoa674534OFC5,800.000058,652CIA (2005)World BankEcuador1,7351,813CONMEBOL8,077.650114,023,503World BankWorld BankEgypt1,7041,620CAF8,254.752972,990,754World BankWorld BankEl Salvador1,4711,479CONCACAF6,559.95706,096,692World BankWorld BankEngland1,9381,903UEFA39,931.213751,075,644World Bank's estimate for UK, adjusted per http://en.wikipedia.org/w/index.php?title=Countries_of_the_United_Kingdom_by_GVA_per_capita&oldid=153382497http://en.wikipedia.org/wiki/Demography_of_England#PopulationEquatorial Guinea1,0971,393CAF30,740.7216621,517World BankWorld BankEritrea1,2051,097CAF1,166.90585,035,036World BankWorld BankEstonia1,2001,434UEFA19,305.69861,346,810World BankWorld BankEthiopia1,2881,356CAF730.047978,290,649World BankWorld BankFaroe Islands1,1511,193UEFA30,500.000047,511CIA (2008)CIA (2007)Fiji1,3941,330OFC6,655.6347828,060World BankWorld BankFinland1,5031,584UEFA34,523.70755,266,268World BankWorld BankFrance1,9631,931UEFA32,288.804063,617,975World BankWorld BankGabon1,4421,481CAF15,306.27741,412,907World BankWorld BankGambia1,3151,337CAF1,396.00391,482,324World BankWorld BankGeorgia1,6211,443UEFA4,694.94454,398,000World BankWorld BankGermany2,0232,104UEFA34,667.648682,376,451World BankWorld BankGhana1,4721,640CAF2,398.177021,947,779World BankWorld BankGreece1,6811,654UEFA28,012.852411,127,947World BankWorld BankGrenada1,0641,131CONCACAF10,447.5793103,260World BankWorld BankGuam631837AFC15,000.0000158,429CIA (2005)World BankGuatemala1,5401,509CONCACAF6,109.652612,995,374World BankWorld BankGuinea1,4911,558CAF1,112.41639,798,963World BankWorld BankGuinea-Bissau1,2041,230CAF1,193.06051,452,659World BankWorld BankGuyana1,0731,221CONCACAF4,438.8338765,367World BankWorld BankHaiti1,3891,442CONCACAF1,446.09829,388,642World BankWorld BankHonduras1,4871,501CONCACAF3,788.34247,037,428World BankWorld BankHong Kong1,2191,157AFC39,949.67066,857,100World BankWorld BankHungary1,6031,622UEFA18,583.623510,071,370World BankWorld BankIceland1,4421,648UEFA36,880.2982303,782World BankWorld BankIndia1,1561,093AFC3,224.70241,143,289,350World BankWorld BankIndonesia1,3291,208AFC6,213.5073227,709,821World BankWorld BankIran1,6271,723AFC12,667.406870,976,584World BankWorld BankIraq1,6251,519AFC10,343.513928,064,095World BankWorld BankIreland1,6611,703UEFA43,714.38384,273,591World BankWorld BankIsrael1,6401,600UEFA25,379.73647,053,700World BankWorld BankItaly1,9291,853UEFA31,988.086758,143,979World BankWorld BankIvory Coast1,6101,737CAF2,594.340017,662,417World BankWorld BankJamaica1,6261,525CONCACAF8,217.37042,653,042World BankWorld BankJapan1,7101,755AFC31,790.6502127,854,000World BankWorld BankJordan1,4111,460AFC9,009.81495,536,000World BankWorld BankKazakhstan1,4551,324UEFA15,700.484115,308,084World BankWorld BankKenya1,4471,382CAF2,128.048136,757,498World BankWorld BankKuwait1,5991,454AFC86,397.36262,417,445World BankWorld BankKyrgyzstan1,2301,094AFC2,218.60865,218,400World BankWorld BankLaos1,021843AFC2,868.88325,895,930World BankWorld BankLatvia1,3441,448UEFA15,469.29422,218,357World BankWorld BankLebanon1,3631,411AFC11,169.14064,079,823World BankWorld BankLesotho1,1731,216CAF1,727.39241,940,413World BankWorld BankLiberia1,3551,294CAF457.82283,384,791World BankWorld BankLibya1,4461,478CAF25,008.83915,686,475World BankWorld BankLiechtenstein1,0471,188UEFA89,700.000035,028CIA (2007)World BankLithuania1,5051,437UEFA16,756.73763,269,909World BankWorld BankLuxembourg1,1661,195UEFA77,104.7577472,637World BankWorld BankMacao1,038640AFC65,853.6412479,808World BankWorld BankMacedonia1,5051,441UEFA8,562.08442,093,801World BankWorld BankMadagascar1,4661,284CAF1,304.374618,826,126World BankWorld BankMalawi1,3451,399CAF554.003113,307,535World BankWorld BankMalaysia1,2621,220AFC17,053.021726,327,098World BankWorld BankMaldives8541,066AFC8,238.0520302,825World BankWorld BankMali1,4501,544CAF1,431.409412,325,545World BankWorld BankMalta1,1881,198UEFA22,291.3361405,308World BankWorld BankMauritania1,1971,217CAF2,538.23113,237,713World BankWorld BankMauritius1,1621,039CAF12,107.04621,233,996World BankWorld BankMexico1,8261,878CONCACAF13,079.6478112,116,694World BankWorld BankMoldova1,3231,374UEFA3,189.98993,585,209World BankWorld BankMongolia795689AFC4,995.37402,559,496World BankWorld BankMontenegro1,569UEFA10,497.8512616,854World BankWorld BankMontserrat760714CONCACAF8,500.00009,538CIACIA (2007)Morocco1,7231,536CAF5,254.047530,395,097World BankWorld BankMozambique1,3281,370CAF734.276221,587,317World BankWorld BankMyanmar1,1391,065AFC2,575.000050,500,070IMFWorld BankNamibia1,3481,384CAF7,061.34982,052,931World BankWorld BankNepal803899AFC1,598.111325,634,043World BankWorld BankNetherlands1,9262,000UEFA40,434.100016,346,101World BankWorld BankNew Caledonia1,2431,396OFC27,300.0000235,314CIA (2005)World BankNew Zealand1,4421,524OFC27,362.47894,184,600World BankWorld BankNicaragua9761,115CONCACAF3,595.66345,524,927World BankWorld BankNiger1,3381,269CAF737.462313,679,705World BankWorld BankNigeria1,6811,649CAF3,994.6434143,314,909World BankWorld BankNorth Korea1,5531,448AFC1,900.000023,969,917CIA (2007)World BankNorthern Ireland1,5681,494UEFA28,212.02111,748,065World Bank's estimate for UK, adjusted per http://en.wikipedia.org/w/index.php?title=Countries_of_the_United_Kingdom_by_GVA_per_capita&oldid=153382497http://en.wikipedia.org/wiki/Demographics_of_Northern_Ireland#PopulationNorway1,8781,589UEFA53,871.16364,660,677World BankWorld BankOman1,2981,509AFC39,531.60062,554,905World BankWorld BankPakistan928963AFC3,740.6079160,905,794World BankWorld BankPalestine1,2811,269AFC3,847.80643,406,334World BankWorld BankPanama1,2831,709CONCACAF10,907.81503,428,509World BankWorld BankPapua New Guinea1,1281,115OFC1,669.59866,245,797World BankWorld BankParaguay1,7081,668CONMEBOL5,671.46336,014,781World BankWorld BankPeru1,6921,701CONMEBOL7,318.377428,030,688World BankWorld BankPhilippines7511,230AFC4,557.883287,366,573World BankWorld BankPoland1,6251,713UEFA15,153.015238,141,267World BankWorld BankPortugal1,8461,867UEFA23,887.035410,522,288World BankWorld BankPuerto Rico1,0111,055CONCACAF34,255.06743,805,214World BankWorld BankQatar1,5361,516AFC118,198.7316967,602World BankWorld BankRomania1,8261,753UEFA11,349.548321,193,760World BankWorld BankRussia1,8141,741UEFA14,975.0436142,487,260World BankWorld BankRwanda1,2131,374CAF952.26959,660,946World BankWorld BankSaint Kitts and Nevis1,2451,222CONCACAF20,186.973349,823World BankWorld BankSaint Lucia1,2301,061CONCACAF9,952.4741167,658World BankWorld BankSaint Vincent and the Grenadines1,2321,190CONCACAF9,203.3989108,908World BankWorld BankSan Marino929865UEFA77,304.000030,130IMFWorld BankSao Tome e Principe9781,050CAF2,336.1847158,806World BankWorld BankSaudi Arabia1,6381,485AFC36,214.546925,371,936World BankWorld BankScotland1,7451,701UEFA34,210.36165,117,000World Bank's estimate for UK, adjusted per http://en.wikipedia.org/w/index.php?title=Countries_of_the_United_Kingdom_by_GVA_per_capita&oldid=153382497http://en.wikipedia.org/wiki/Demographics_of_ScotlandSenegal1,4521,658CAF1,926.556611,582,925World BankWorld BankSerbia1,9341,708UEFA9,895.79527,411,569World BankWorld BankSeychelles971982CAF17,465.915184,600World BankWorld BankSierra Leone1,4331,336CAF1,088.42945,280,909World BankWorld BankSingapore1,2531,165AFC59,754.66994,401,400World BankWorld BankSlovakia1,6721,736UEFA18,838.76915,373,054World BankWorld BankSlovenia1,4651,619UEFA25,885.31062,006,868World BankWorld BankSolomon Islands1,3801,217OFC1,520.6019480,745World BankWorld BankSomalia1,081862CAF600.00008,687,671CIA (2007)World BankSouth Africa1,6381,559CAF10,642.665347,991,699World BankWorld BankSouth Korea1,7391,722AFC25,863.215248,371,946World BankWorld BankSouth Sudan1,194CAF2,782.07138,376,893South Sudan not independent in 2006; used Sudan's figure insteadWorld BankSpain2,0001,932UEFA30,879.856444,397,319World BankWorld BankSri Lanka1,003786AFC5,710.938019,858,000World BankWorld BankSudan1,4001,333CAF2,782.071332,397,535World BankWorld BankSurinam1,2661,211CONCACAF11,519.6676505,186World BankWorld BankSwaziland1,1751,195CAF5,834.12341,118,253World BankWorld BankSweden1,8091,774UEFA37,594.46409,080,505World BankWorld BankSwitzerland1,6341,768UEFA43,377.77597,483,934World BankWorld BankSyria1,4471,490AFC5,389.000018,804,914IMFWorld BankTahiti1,4531,260OFC18,000.0000178,113CIA (2004, French Polynesia)2007: http://en.wikipedia.org/wiki/TahitiTaiwan1,051809AFC31,333.000022,800,000IMFIMFTajikistan1,5151,264AFC1,651.80856,954,522World BankWorld BankTanzania1,3181,247CAF1,732.682939,942,347World BankWorld BankThailand1,4581,356AFC10,461.540465,883,961World BankWorld BankTogo1,3661,432CAF1,126.65355,685,845World BankWorld BankTonga931836OFC4,538.6633101,617World BankWorld BankTrinidad and Tobago1,4301,510CONCACAF26,420.72171,303,478World BankWorld BankTunisia1,6311,568CAF8,359.634510,127,900World BankWorld BankTurkey1,6231,676UEFA13,049.324968,626,337World BankWorld BankTurkmenistan1,3491,264AFC6,550.02324,801,595World BankWorld BankTurks and Caicos719CONCACAF29,100.000027,642CIA (2007)World BankUganda1,4071,499CAF1,196.538529,711,397World BankWorld BankUkraine1,6551,783UEFA7,213.516846,787,750World BankWorld BankUnited Arab Emirates1,5581,654AFC87,766.14734,875,639World BankWorld BankUnited States1,7301,804CONCACAF46,437.1073298,379,912World BankWorld BankUruguay1,7321,894CONMEBOL12,097.36143,330,217World BankWorld BankUS Virgin Islands809740CONCACAF14,500.0000107,700CIA (2004)World BankUzbekistan1,5001,612AFC2,958.390926,488,250World BankWorld BankVanuatu1,0791,223OFC2,533.8928214,654World BankWorld BankVenezuela1,3121,667CONMEBOL14,846.736927,190,882World BankWorld BankVietnam1,1931,235AFC3,383.513083,311,200World BankWorld BankWales1,5291,645UEFA27,485.96112,983,270World Bank's estimate for UK, adjusted per http://en.wikipedia.org/w/index.php?title=Countries_of_the_United_Kingdom_by_GVA_per_capita&oldid=153382497http://en.wikipedia.org/wiki/Demographics_of_Wales#PopulationWestern Samoa852822OFC4,972.1411181,073World BankWorld BankYemen1,1791,198AFC3,964.068320,661,714World BankWorld BankZambia1,6271,517CAF2,525.384311,781,612World BankWorld BankZimbabwe1,5121,334CAF1,495.007912,724,308World BankWorld Bank"
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#edit-2-1",
    "href": "presentation-exercise/presentation-exercise.html#edit-2-1",
    "title": "Presentation Exercise",
    "section": "Edit 2",
    "text": "Edit 2\n\nMy Prompt\nEdit table so it only shows country, elo98, elo 15 and confederation\n\n\nAI Response\nTo display only specific columns from your data frame in the flextable, you can subset your data frame to include only the desired columns before creating the flextable. Here’s how you can do it:\n\n#Load the flextable package\nlibrary(flextable)\n\n# Assuming your data frame is named elodata\n# If not, replace elodata with the name of your data frame\n\n# Subset the data frame to include only the desired columns\nselected_columns &lt;- c(\"country\", \"elo98\", \"elo15\", \"confederation\")\nsubset_data &lt;- elodata[selected_columns]\n\n# Create a flextable object from the subsetted data frame\nft &lt;- flextable(subset_data)\n\n# Display the flextable\nft\n\n\ncountryelo98elo15confederationAfghanistan9931,116AFCAlbania1,3821,549UEFAAlgeria1,4861,671CAFAndorra1,067952UEFAAngola1,4981,435CAFAnguilla612641CONCACAFAntigua and Barbuda1,1491,264CONCACAFArgentina1,8722,041CONMEBOLArmenia1,3941,512UEFAAruba1,015925CONCACAFAustralia1,7871,718AFCAustria1,6861,694UEFAAzerbaijan1,2901,394UEFABahamas858899CONCACAFBahrain1,3281,467AFCBangladesh1,006967AFCBarbados1,2911,102CONCACAFBelarus1,3511,543UEFABelgium1,7841,887UEFABelize9851,098CONCACAFBenin1,2071,371CAFBermuda1,2801,230CONCACAFBhutan640611AFCBolivia1,6641,604CONMEBOLBosnia and Herzegovina1,5561,694UEFABotswana1,0271,286CAFBrazil2,0652,036CONMEBOLBritish Virgin Islands848652CONCACAFBrunei775635AFCBulgaria1,7681,589UEFABurkina Faso1,3981,467CAFBurundi1,4401,312CAFCambodia1,012756AFCCameroon1,5971,609CAFCanada1,5031,499CONCACAFCape Verde1,2431,536CAFCayman Islands1,154954CONCACAFCentral African Republic1,1891,268CAFChad1,2291,265CAFChile1,7571,912CONMEBOLChina1,6311,588AFCColombia1,7412,004CONMEBOLComoros891907CAFCongo1,4841,440CAFCook Islands875819OFCCosta Rica1,5941,827CONCACAFCroatia1,8291,814UEFACuba1,4141,391CONCACAFCuracao1,1971,065CONCACAFCyprus1,4371,375UEFACzechia1,8531,752UEFADemocratic Republic of Congo1,5031,486CAFDenmark1,8281,738UEFADjibouti891788CAFDominica1,208958CONCACAFDominican Republic1,1301,227CONCACAFEast Timor738AFCEastern Samoa674534OFCEcuador1,7351,813CONMEBOLEgypt1,7041,620CAFEl Salvador1,4711,479CONCACAFEngland1,9381,903UEFAEquatorial Guinea1,0971,393CAFEritrea1,2051,097CAFEstonia1,2001,434UEFAEthiopia1,2881,356CAFFaroe Islands1,1511,193UEFAFiji1,3941,330OFCFinland1,5031,584UEFAFrance1,9631,931UEFAGabon1,4421,481CAFGambia1,3151,337CAFGeorgia1,6211,443UEFAGermany2,0232,104UEFAGhana1,4721,640CAFGreece1,6811,654UEFAGrenada1,0641,131CONCACAFGuam631837AFCGuatemala1,5401,509CONCACAFGuinea1,4911,558CAFGuinea-Bissau1,2041,230CAFGuyana1,0731,221CONCACAFHaiti1,3891,442CONCACAFHonduras1,4871,501CONCACAFHong Kong1,2191,157AFCHungary1,6031,622UEFAIceland1,4421,648UEFAIndia1,1561,093AFCIndonesia1,3291,208AFCIran1,6271,723AFCIraq1,6251,519AFCIreland1,6611,703UEFAIsrael1,6401,600UEFAItaly1,9291,853UEFAIvory Coast1,6101,737CAFJamaica1,6261,525CONCACAFJapan1,7101,755AFCJordan1,4111,460AFCKazakhstan1,4551,324UEFAKenya1,4471,382CAFKuwait1,5991,454AFCKyrgyzstan1,2301,094AFCLaos1,021843AFCLatvia1,3441,448UEFALebanon1,3631,411AFCLesotho1,1731,216CAFLiberia1,3551,294CAFLibya1,4461,478CAFLiechtenstein1,0471,188UEFALithuania1,5051,437UEFALuxembourg1,1661,195UEFAMacao1,038640AFCMacedonia1,5051,441UEFAMadagascar1,4661,284CAFMalawi1,3451,399CAFMalaysia1,2621,220AFCMaldives8541,066AFCMali1,4501,544CAFMalta1,1881,198UEFAMauritania1,1971,217CAFMauritius1,1621,039CAFMexico1,8261,878CONCACAFMoldova1,3231,374UEFAMongolia795689AFCMontenegro1,569UEFAMontserrat760714CONCACAFMorocco1,7231,536CAFMozambique1,3281,370CAFMyanmar1,1391,065AFCNamibia1,3481,384CAFNepal803899AFCNetherlands1,9262,000UEFANew Caledonia1,2431,396OFCNew Zealand1,4421,524OFCNicaragua9761,115CONCACAFNiger1,3381,269CAFNigeria1,6811,649CAFNorth Korea1,5531,448AFCNorthern Ireland1,5681,494UEFANorway1,8781,589UEFAOman1,2981,509AFCPakistan928963AFCPalestine1,2811,269AFCPanama1,2831,709CONCACAFPapua New Guinea1,1281,115OFCParaguay1,7081,668CONMEBOLPeru1,6921,701CONMEBOLPhilippines7511,230AFCPoland1,6251,713UEFAPortugal1,8461,867UEFAPuerto Rico1,0111,055CONCACAFQatar1,5361,516AFCRomania1,8261,753UEFARussia1,8141,741UEFARwanda1,2131,374CAFSaint Kitts and Nevis1,2451,222CONCACAFSaint Lucia1,2301,061CONCACAFSaint Vincent and the Grenadines1,2321,190CONCACAFSan Marino929865UEFASao Tome e Principe9781,050CAFSaudi Arabia1,6381,485AFCScotland1,7451,701UEFASenegal1,4521,658CAFSerbia1,9341,708UEFASeychelles971982CAFSierra Leone1,4331,336CAFSingapore1,2531,165AFCSlovakia1,6721,736UEFASlovenia1,4651,619UEFASolomon Islands1,3801,217OFCSomalia1,081862CAFSouth Africa1,6381,559CAFSouth Korea1,7391,722AFCSouth Sudan1,194CAFSpain2,0001,932UEFASri Lanka1,003786AFCSudan1,4001,333CAFSurinam1,2661,211CONCACAFSwaziland1,1751,195CAFSweden1,8091,774UEFASwitzerland1,6341,768UEFASyria1,4471,490AFCTahiti1,4531,260OFCTaiwan1,051809AFCTajikistan1,5151,264AFCTanzania1,3181,247CAFThailand1,4581,356AFCTogo1,3661,432CAFTonga931836OFCTrinidad and Tobago1,4301,510CONCACAFTunisia1,6311,568CAFTurkey1,6231,676UEFATurkmenistan1,3491,264AFCTurks and Caicos719CONCACAFUganda1,4071,499CAFUkraine1,6551,783UEFAUnited Arab Emirates1,5581,654AFCUnited States1,7301,804CONCACAFUruguay1,7321,894CONMEBOLUS Virgin Islands809740CONCACAFUzbekistan1,5001,612AFCVanuatu1,0791,223OFCVenezuela1,3121,667CONMEBOLVietnam1,1931,235AFCWales1,5291,645UEFAWestern Samoa852822OFCYemen1,1791,198AFCZambia1,6271,517CAFZimbabwe1,5121,334CAF"
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#edit-3",
    "href": "presentation-exercise/presentation-exercise.html#edit-3",
    "title": "Presentation Exercise",
    "section": "Edit 3",
    "text": "Edit 3\n\nMy Prompt\nOnly include countries that are included in the graph and organize by confederation\n\n\nAI Response\nTo include only countries that are included in the graph and organize by confederation in the flextable, you can filter the data frame to include only the relevant countries and then organize the table accordingly. Here’s how you can do it:\n\n# Load the flextable package\nlibrary(flextable)\n\n# Filter the data frame to include only the relevant countries\nselected_countries &lt;- c(\"Brazil\", \"Colombia\", \"Argentina\", \"Peru\", \"Venezuela\", \n                        \"Chile\", \"Ecuador\", \"Bolivia\", \"Paraguay\", \"Uruguay\",\n                        \"United States\", \"Mexico\", \"Canada\", \"Guatemala\", \"Cuba\",\n                        \"Dominican Rep.\", \"Haiti\", \"Honduras\", \"El Salvador\", \"Nicaragua\",\n                        \"China\", \"India\", \"Indonesia\", \"Pakistan\", \"Bangladesh\",\n                        \"Japan\", \"Philippines\", \"Vietnam\", \"Iran\", \"Thailand\",\n                        \"Russia\", \"Germany\", \"Turkey\", \"France\", \"Italy\",\n                        \"England\", \"Ukraine\", \"Spain\", \"Poland\", \"Romania\",\n                        \"Nigeria\", \"Ethiopia\", \"Egypt\", \"Dem. Rep. Congo\", \"South Africa\",\n                        \"Tanzania\", \"Kenya\", \"Algeria\", \"Sudan\", \"Morocco\",\n                        \"Papua New Guinea\", \"New Zealand\", \"Fiji\", \"Solomon Islands\", \"New Caledonia\",\n                        \"Vanuatu\", \"Samoa\", \"Tahiti\", \"Tonga\", \"American Samoa\")\nfiltered_data &lt;- elodata[elodata$country %in% selected_countries,]\n\n# Order the filtered data frame by confederation\nordered_data &lt;- filtered_data[order(filtered_data$confederation),]\n\n# Subset the ordered data frame to include only the desired columns\nselected_columns &lt;- c(\"country\", \"elo98\", \"elo15\", \"confederation\")\nsubset_data &lt;- ordered_data[selected_columns]\n\n# Create a flextable object from the subsetted data frame\nft &lt;- flextable(subset_data)\n\n# Display the flextable\nft\n\n\ncountryelo98elo15confederationBangladesh1,006967AFCChina1,6311,588AFCIndia1,1561,093AFCIndonesia1,3291,208AFCIran1,6271,723AFCJapan1,7101,755AFCPakistan928963AFCPhilippines7511,230AFCThailand1,4581,356AFCVietnam1,1931,235AFCAlgeria1,4861,671CAFEgypt1,7041,620CAFEthiopia1,2881,356CAFKenya1,4471,382CAFMorocco1,7231,536CAFNigeria1,6811,649CAFSouth Africa1,6381,559CAFSudan1,4001,333CAFTanzania1,3181,247CAFCanada1,5031,499CONCACAFCuba1,4141,391CONCACAFEl Salvador1,4711,479CONCACAFGuatemala1,5401,509CONCACAFHaiti1,3891,442CONCACAFHonduras1,4871,501CONCACAFMexico1,8261,878CONCACAFNicaragua9761,115CONCACAFUnited States1,7301,804CONCACAFArgentina1,8722,041CONMEBOLBolivia1,6641,604CONMEBOLBrazil2,0652,036CONMEBOLChile1,7571,912CONMEBOLColombia1,7412,004CONMEBOLEcuador1,7351,813CONMEBOLParaguay1,7081,668CONMEBOLPeru1,6921,701CONMEBOLUruguay1,7321,894CONMEBOLVenezuela1,3121,667CONMEBOLFiji1,3941,330OFCNew Caledonia1,2431,396OFCNew Zealand1,4421,524OFCPapua New Guinea1,1281,115OFCSolomon Islands1,3801,217OFCTahiti1,4531,260OFCTonga931836OFCVanuatu1,0791,223OFCEngland1,9381,903UEFAFrance1,9631,931UEFAGermany2,0232,104UEFAItaly1,9291,853UEFAPoland1,6251,713UEFARomania1,8261,753UEFARussia1,8141,741UEFASpain2,0001,932UEFATurkey1,6231,676UEFAUkraine1,6551,783UEFA"
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#final-table-iteration",
    "href": "presentation-exercise/presentation-exercise.html#final-table-iteration",
    "title": "Presentation Exercise",
    "section": "Final Table Iteration",
    "text": "Final Table Iteration\nWith some addtional edits to add color and presentation this is the code for the final table. Data highlighted in Blue represents a higher Elo than in 1998 and Red is a lower Elo.\n\nlibrary(flextable)\n\n# Filter the data frame to include only the relevant countries\nselected_countries &lt;- c(\"Brazil\", \"Colombia\", \"Argentina\", \"Peru\", \"Venezuela\", \n                        \"Chile\", \"Ecuador\", \"Bolivia\", \"Paraguay\", \"Uruguay\",\n                        \"United States\", \"Mexico\", \"Canada\", \"Guatemala\", \"Cuba\",\n                        \"Dominican Rep.\", \"Haiti\", \"Honduras\", \"El Salvador\", \"Nicaragua\",\n                        \"China\", \"India\", \"Indonesia\", \"Pakistan\", \"Bangladesh\",\n                        \"Japan\", \"Philippines\", \"Vietnam\", \"Iran\", \"Thailand\",\n                        \"Russia\", \"Germany\", \"Turkey\", \"France\", \"Italy\",\n                        \"England\", \"Ukraine\", \"Spain\", \"Poland\", \"Romania\",\n                        \"Nigeria\", \"Ethiopia\", \"Egypt\", \"Dem. Rep. Congo\", \"South Africa\",\n                        \"Tanzania\", \"Kenya\", \"Algeria\", \"Sudan\", \"Morocco\",\n                        \"Papua New Guinea\", \"New Zealand\", \"Fiji\", \"Solomon Islands\", \"New Caledonia\",\n                        \"Vanuatu\", \"Samoa\", \"Tahiti\", \"Tonga\", \"American Samoa\")\nfiltered_data &lt;- elodata[elodata$country %in% selected_countries,]\n\n# Order the filtered data frame by confederation\nordered_data &lt;- filtered_data[order(filtered_data$confederation),]\n\n# Subset the ordered data frame to include only the desired columns\nselected_columns &lt;- c(\"country\", \"elo98\", \"elo15\", \"confederation\")\nsubset_data &lt;- ordered_data[selected_columns]\n\n# Change column names\ncolnames(subset_data) &lt;- c(\"Country\", \"Elo in 1998\", \"Elo in 2015\", \"Confederation\")\n\n# Create a flextable object from the subsetted data frame\nft &lt;- flextable(subset_data)\n\n# Generate a logic vector based on whether Elo in 2015 is higher than Elo in 1998\nlogic_vector &lt;- subset_data$`Elo in 2015` &gt; subset_data$`Elo in 1998`\n\n# Now, apply the conditional formatting\nft &lt;- color(ft, i = logic_vector, part = \"body\", j = \"Elo in 2015\", color = \"blue\")\nft &lt;- color(ft, i = !logic_vector, part = \"body\", j = \"Elo in 2015\", color = \"red\")\n\n# Define colors for each confederation\nconfederation_colors &lt;- c(\"lightyellow\", \"orange\", \"lavender\", \"pink\", \"cyan\", \"lightgreen\", \"tan\")\nconfederation_levels &lt;- unique(subset_data$Confederation)\nconfederation_logic_vector &lt;- factor(subset_data$Confederation, levels = confederation_levels)\n\n# Create a logic vector to identify the countries\ncountry_logic_vector &lt;- rep(TRUE, nrow(subset_data)) # Assuming all rows are countries\n\n# Fill cells with light grey for countries\nft &lt;- bg(ft, i = country_logic_vector, bg = \"lightgrey\")\n\n# Create a vector of colors for each row based on confederation\ncell_colors &lt;- sapply(confederation_logic_vector, function(conf) {\n  if (conf == \"CAF\") {\n    return(\"lightyellow\")\n  } else if (conf == \"CONMEBOL\") {\n    return(\"orange\")\n  } else if (conf == \"CONCACAF\") {\n    return(\"lavender\")\n  } else if (conf == \"UEFA\") {\n    return(\"pink\")\n  } else if (conf == \"AFC\") {\n    return(\"cyan\")\n  } else if (conf == \"OFC\") {\n    return(\"lightgreen\")\n  } else {\n    return(\"tan\")\n  }\n}, USE.NAMES = FALSE)\n\n# Fill cells with colors based on confederation\nfor (i in 1:length(cell_colors)) {\n  if (!is.na(cell_colors[i])) {\n    ft &lt;- bg(ft, i = i, j = \"Confederation\", bg = cell_colors[i])\n  }\n}\n\n# Define logic vectors for variable names (column headers)\nvariable_names_logic_vector &lt;- rep(TRUE, ncol(subset_data)) # Assuming all columns are variable names\n\n# Fill cells with white for variable names\nft &lt;- bg(ft, part = \"header\", bg = \"white\")\n\nborder &lt;- fp_border_default()\nvline(ft, j = c('Country', 'Elo in 2015'), border = border, part = \"all\")\n\n\nCountryElo in 1998Elo in 2015ConfederationBangladesh1,006967AFCChina1,6311,588AFCIndia1,1561,093AFCIndonesia1,3291,208AFCIran1,6271,723AFCJapan1,7101,755AFCPakistan928963AFCPhilippines7511,230AFCThailand1,4581,356AFCVietnam1,1931,235AFCAlgeria1,4861,671CAFEgypt1,7041,620CAFEthiopia1,2881,356CAFKenya1,4471,382CAFMorocco1,7231,536CAFNigeria1,6811,649CAFSouth Africa1,6381,559CAFSudan1,4001,333CAFTanzania1,3181,247CAFCanada1,5031,499CONCACAFCuba1,4141,391CONCACAFEl Salvador1,4711,479CONCACAFGuatemala1,5401,509CONCACAFHaiti1,3891,442CONCACAFHonduras1,4871,501CONCACAFMexico1,8261,878CONCACAFNicaragua9761,115CONCACAFUnited States1,7301,804CONCACAFArgentina1,8722,041CONMEBOLBolivia1,6641,604CONMEBOLBrazil2,0652,036CONMEBOLChile1,7571,912CONMEBOLColombia1,7412,004CONMEBOLEcuador1,7351,813CONMEBOLParaguay1,7081,668CONMEBOLPeru1,6921,701CONMEBOLUruguay1,7321,894CONMEBOLVenezuela1,3121,667CONMEBOLFiji1,3941,330OFCNew Caledonia1,2431,396OFCNew Zealand1,4421,524OFCPapua New Guinea1,1281,115OFCSolomon Islands1,3801,217OFCTahiti1,4531,260OFCTonga931836OFCVanuatu1,0791,223OFCEngland1,9381,903UEFAFrance1,9631,931UEFAGermany2,0232,104UEFAItaly1,9291,853UEFAPoland1,6251,713UEFARomania1,8261,753UEFARussia1,8141,741UEFASpain2,0001,932UEFATurkey1,6231,676UEFAUkraine1,6551,783UEFA\n\n# Display the flextable\nft\n\n\nCountryElo in 1998Elo in 2015ConfederationBangladesh1,006967AFCChina1,6311,588AFCIndia1,1561,093AFCIndonesia1,3291,208AFCIran1,6271,723AFCJapan1,7101,755AFCPakistan928963AFCPhilippines7511,230AFCThailand1,4581,356AFCVietnam1,1931,235AFCAlgeria1,4861,671CAFEgypt1,7041,620CAFEthiopia1,2881,356CAFKenya1,4471,382CAFMorocco1,7231,536CAFNigeria1,6811,649CAFSouth Africa1,6381,559CAFSudan1,4001,333CAFTanzania1,3181,247CAFCanada1,5031,499CONCACAFCuba1,4141,391CONCACAFEl Salvador1,4711,479CONCACAFGuatemala1,5401,509CONCACAFHaiti1,3891,442CONCACAFHonduras1,4871,501CONCACAFMexico1,8261,878CONCACAFNicaragua9761,115CONCACAFUnited States1,7301,804CONCACAFArgentina1,8722,041CONMEBOLBolivia1,6641,604CONMEBOLBrazil2,0652,036CONMEBOLChile1,7571,912CONMEBOLColombia1,7412,004CONMEBOLEcuador1,7351,813CONMEBOLParaguay1,7081,668CONMEBOLPeru1,6921,701CONMEBOLUruguay1,7321,894CONMEBOLVenezuela1,3121,667CONMEBOLFiji1,3941,330OFCNew Caledonia1,2431,396OFCNew Zealand1,4421,524OFCPapua New Guinea1,1281,115OFCSolomon Islands1,3801,217OFCTahiti1,4531,260OFCTonga931836OFCVanuatu1,0791,223OFCEngland1,9381,903UEFAFrance1,9631,931UEFAGermany2,0232,104UEFAItaly1,9291,853UEFAPoland1,6251,713UEFARomania1,8261,753UEFARussia1,8141,741UEFASpain2,0001,932UEFATurkey1,6231,676UEFAUkraine1,6551,783UEFA"
  }
]